/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// AuthorizationAllOf struct for AuthorizationAllOf
type AuthorizationAllOf struct {
	CreatedAt *time.Time `json:"createdAt,omitempty" yaml:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty" yaml:"updatedAt,omitempty"`
	// ID of the organization that the authorization is scoped to.
	OrgID *string `json:"orgID,omitempty" yaml:"orgID,omitempty"`
	// List of permissions for an authorization.  An authorization must have at least one permission.
	Permissions *[]Permission `json:"permissions,omitempty" yaml:"permissions,omitempty"`
	Id          *string       `json:"id,omitempty" yaml:"id,omitempty"`
	// Token used to authenticate API requests.
	Token *string `json:"token,omitempty" yaml:"token,omitempty"`
	// ID of the user that created and owns the token.
	UserID *string `json:"userID,omitempty" yaml:"userID,omitempty"`
	// Name of the user that created and owns the token.
	User *string `json:"user,omitempty" yaml:"user,omitempty"`
	// Name of the organization that the token is scoped to.
	Org   *string                  `json:"org,omitempty" yaml:"org,omitempty"`
	Links *AuthorizationAllOfLinks `json:"links,omitempty" yaml:"links,omitempty"`
}

// NewAuthorizationAllOf instantiates a new AuthorizationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizationAllOf() *AuthorizationAllOf {
	this := AuthorizationAllOf{}
	return &this
}

// NewAuthorizationAllOfWithDefaults instantiates a new AuthorizationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationAllOfWithDefaults() *AuthorizationAllOf {
	this := AuthorizationAllOf{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AuthorizationAllOf) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAllOf) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AuthorizationAllOf) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *AuthorizationAllOf) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AuthorizationAllOf) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAllOf) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AuthorizationAllOf) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *AuthorizationAllOf) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetOrgID returns the OrgID field value if set, zero value otherwise.
func (o *AuthorizationAllOf) GetOrgID() string {
	if o == nil || o.OrgID == nil {
		var ret string
		return ret
	}
	return *o.OrgID
}

// GetOrgIDOk returns a tuple with the OrgID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAllOf) GetOrgIDOk() (*string, bool) {
	if o == nil || o.OrgID == nil {
		return nil, false
	}
	return o.OrgID, true
}

// HasOrgID returns a boolean if a field has been set.
func (o *AuthorizationAllOf) HasOrgID() bool {
	if o != nil && o.OrgID != nil {
		return true
	}

	return false
}

// SetOrgID gets a reference to the given string and assigns it to the OrgID field.
func (o *AuthorizationAllOf) SetOrgID(v string) {
	o.OrgID = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *AuthorizationAllOf) GetPermissions() []Permission {
	if o == nil || o.Permissions == nil {
		var ret []Permission
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAllOf) GetPermissionsOk() (*[]Permission, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *AuthorizationAllOf) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []Permission and assigns it to the Permissions field.
func (o *AuthorizationAllOf) SetPermissions(v []Permission) {
	o.Permissions = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuthorizationAllOf) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAllOf) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuthorizationAllOf) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AuthorizationAllOf) SetId(v string) {
	o.Id = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *AuthorizationAllOf) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAllOf) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *AuthorizationAllOf) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *AuthorizationAllOf) SetToken(v string) {
	o.Token = &v
}

// GetUserID returns the UserID field value if set, zero value otherwise.
func (o *AuthorizationAllOf) GetUserID() string {
	if o == nil || o.UserID == nil {
		var ret string
		return ret
	}
	return *o.UserID
}

// GetUserIDOk returns a tuple with the UserID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAllOf) GetUserIDOk() (*string, bool) {
	if o == nil || o.UserID == nil {
		return nil, false
	}
	return o.UserID, true
}

// HasUserID returns a boolean if a field has been set.
func (o *AuthorizationAllOf) HasUserID() bool {
	if o != nil && o.UserID != nil {
		return true
	}

	return false
}

// SetUserID gets a reference to the given string and assigns it to the UserID field.
func (o *AuthorizationAllOf) SetUserID(v string) {
	o.UserID = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *AuthorizationAllOf) GetUser() string {
	if o == nil || o.User == nil {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAllOf) GetUserOk() (*string, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *AuthorizationAllOf) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *AuthorizationAllOf) SetUser(v string) {
	o.User = &v
}

// GetOrg returns the Org field value if set, zero value otherwise.
func (o *AuthorizationAllOf) GetOrg() string {
	if o == nil || o.Org == nil {
		var ret string
		return ret
	}
	return *o.Org
}

// GetOrgOk returns a tuple with the Org field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAllOf) GetOrgOk() (*string, bool) {
	if o == nil || o.Org == nil {
		return nil, false
	}
	return o.Org, true
}

// HasOrg returns a boolean if a field has been set.
func (o *AuthorizationAllOf) HasOrg() bool {
	if o != nil && o.Org != nil {
		return true
	}

	return false
}

// SetOrg gets a reference to the given string and assigns it to the Org field.
func (o *AuthorizationAllOf) SetOrg(v string) {
	o.Org = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *AuthorizationAllOf) GetLinks() AuthorizationAllOfLinks {
	if o == nil || o.Links == nil {
		var ret AuthorizationAllOfLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthorizationAllOf) GetLinksOk() (*AuthorizationAllOfLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AuthorizationAllOf) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given AuthorizationAllOfLinks and assigns it to the Links field.
func (o *AuthorizationAllOf) SetLinks(v AuthorizationAllOfLinks) {
	o.Links = &v
}

func (o AuthorizationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if o.OrgID != nil {
		toSerialize["orgID"] = o.OrgID
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	if o.UserID != nil {
		toSerialize["userID"] = o.UserID
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	if o.Org != nil {
		toSerialize["org"] = o.Org
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableAuthorizationAllOf struct {
	value *AuthorizationAllOf
	isSet bool
}

func (v NullableAuthorizationAllOf) Get() *AuthorizationAllOf {
	return v.value
}

func (v *NullableAuthorizationAllOf) Set(val *AuthorizationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizationAllOf(val *AuthorizationAllOf) *NullableAuthorizationAllOf {
	return &NullableAuthorizationAllOf{value: val, isSet: true}
}

func (v NullableAuthorizationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
