/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// Authorizations struct for Authorizations
type Authorizations struct {
	Links          *Links           `json:"links,omitempty" yaml:"links,omitempty"`
	Authorizations *[]Authorization `json:"authorizations,omitempty" yaml:"authorizations,omitempty"`
}

// NewAuthorizations instantiates a new Authorizations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthorizations() *Authorizations {
	this := Authorizations{}
	return &this
}

// NewAuthorizationsWithDefaults instantiates a new Authorizations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthorizationsWithDefaults() *Authorizations {
	this := Authorizations{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Authorizations) GetLinks() Links {
	if o == nil || o.Links == nil {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authorizations) GetLinksOk() (*Links, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Authorizations) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *Authorizations) SetLinks(v Links) {
	o.Links = &v
}

// GetAuthorizations returns the Authorizations field value if set, zero value otherwise.
func (o *Authorizations) GetAuthorizations() []Authorization {
	if o == nil || o.Authorizations == nil {
		var ret []Authorization
		return ret
	}
	return *o.Authorizations
}

// GetAuthorizationsOk returns a tuple with the Authorizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Authorizations) GetAuthorizationsOk() (*[]Authorization, bool) {
	if o == nil || o.Authorizations == nil {
		return nil, false
	}
	return o.Authorizations, true
}

// HasAuthorizations returns a boolean if a field has been set.
func (o *Authorizations) HasAuthorizations() bool {
	if o != nil && o.Authorizations != nil {
		return true
	}

	return false
}

// SetAuthorizations gets a reference to the given []Authorization and assigns it to the Authorizations field.
func (o *Authorizations) SetAuthorizations(v []Authorization) {
	o.Authorizations = &v
}

func (o Authorizations) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Authorizations != nil {
		toSerialize["authorizations"] = o.Authorizations
	}
	return json.Marshal(toSerialize)
}

type NullableAuthorizations struct {
	value *Authorizations
	isSet bool
}

func (v NullableAuthorizations) Get() *Authorizations {
	return v.value
}

func (v *NullableAuthorizations) Set(val *Authorizations) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthorizations) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthorizations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthorizations(val *Authorizations) *NullableAuthorizations {
	return &NullableAuthorizations{value: val, isSet: true}
}

func (v NullableAuthorizations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthorizations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
