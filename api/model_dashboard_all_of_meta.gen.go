/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"time"
)

// DashboardAllOfMeta struct for DashboardAllOfMeta
type DashboardAllOfMeta struct {
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewDashboardAllOfMeta instantiates a new DashboardAllOfMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDashboardAllOfMeta() *DashboardAllOfMeta {
	this := DashboardAllOfMeta{}
	return &this
}

// NewDashboardAllOfMetaWithDefaults instantiates a new DashboardAllOfMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDashboardAllOfMetaWithDefaults() *DashboardAllOfMeta {
	this := DashboardAllOfMeta{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DashboardAllOfMeta) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardAllOfMeta) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DashboardAllOfMeta) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *DashboardAllOfMeta) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *DashboardAllOfMeta) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DashboardAllOfMeta) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *DashboardAllOfMeta) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *DashboardAllOfMeta) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o DashboardAllOfMeta) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableDashboardAllOfMeta struct {
	value *DashboardAllOfMeta
	isSet bool
}

func (v NullableDashboardAllOfMeta) Get() *DashboardAllOfMeta {
	return v.value
}

func (v *NullableDashboardAllOfMeta) Set(val *DashboardAllOfMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableDashboardAllOfMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableDashboardAllOfMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDashboardAllOfMeta(val *DashboardAllOfMeta) *NullableDashboardAllOfMeta {
	return &NullableDashboardAllOfMeta{value: val, isSet: true}
}

func (v NullableDashboardAllOfMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDashboardAllOfMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
