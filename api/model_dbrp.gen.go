/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// DBRP struct for DBRP
type DBRP struct {
	// the mapping identifier
	Id *string `json:"id,omitempty"`
	// the organization ID that owns this mapping.
	OrgID *string `json:"orgID,omitempty"`
	// the organization that owns this mapping.
	Org *string `json:"org,omitempty"`
	// the bucket ID used as target for the translation.
	BucketID *string `json:"bucketID,omitempty"`
	// InfluxDB v1 database
	Database *string `json:"database,omitempty"`
	// InfluxDB v1 retention policy
	RetentionPolicy *string `json:"retention_policy,omitempty"`
	// Specify if this mapping represents the default retention policy for the database specificed.
	Default *bool  `json:"default,omitempty"`
	Links   *Links `json:"links,omitempty"`
}

// NewDBRP instantiates a new DBRP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDBRP() *DBRP {
	this := DBRP{}
	return &this
}

// NewDBRPWithDefaults instantiates a new DBRP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDBRPWithDefaults() *DBRP {
	this := DBRP{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DBRP) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DBRP) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DBRP) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DBRP) SetId(v string) {
	o.Id = &v
}

// GetOrgID returns the OrgID field value if set, zero value otherwise.
func (o *DBRP) GetOrgID() string {
	if o == nil || o.OrgID == nil {
		var ret string
		return ret
	}
	return *o.OrgID
}

// GetOrgIDOk returns a tuple with the OrgID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DBRP) GetOrgIDOk() (*string, bool) {
	if o == nil || o.OrgID == nil {
		return nil, false
	}
	return o.OrgID, true
}

// HasOrgID returns a boolean if a field has been set.
func (o *DBRP) HasOrgID() bool {
	if o != nil && o.OrgID != nil {
		return true
	}

	return false
}

// SetOrgID gets a reference to the given string and assigns it to the OrgID field.
func (o *DBRP) SetOrgID(v string) {
	o.OrgID = &v
}

// GetOrg returns the Org field value if set, zero value otherwise.
func (o *DBRP) GetOrg() string {
	if o == nil || o.Org == nil {
		var ret string
		return ret
	}
	return *o.Org
}

// GetOrgOk returns a tuple with the Org field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DBRP) GetOrgOk() (*string, bool) {
	if o == nil || o.Org == nil {
		return nil, false
	}
	return o.Org, true
}

// HasOrg returns a boolean if a field has been set.
func (o *DBRP) HasOrg() bool {
	if o != nil && o.Org != nil {
		return true
	}

	return false
}

// SetOrg gets a reference to the given string and assigns it to the Org field.
func (o *DBRP) SetOrg(v string) {
	o.Org = &v
}

// GetBucketID returns the BucketID field value if set, zero value otherwise.
func (o *DBRP) GetBucketID() string {
	if o == nil || o.BucketID == nil {
		var ret string
		return ret
	}
	return *o.BucketID
}

// GetBucketIDOk returns a tuple with the BucketID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DBRP) GetBucketIDOk() (*string, bool) {
	if o == nil || o.BucketID == nil {
		return nil, false
	}
	return o.BucketID, true
}

// HasBucketID returns a boolean if a field has been set.
func (o *DBRP) HasBucketID() bool {
	if o != nil && o.BucketID != nil {
		return true
	}

	return false
}

// SetBucketID gets a reference to the given string and assigns it to the BucketID field.
func (o *DBRP) SetBucketID(v string) {
	o.BucketID = &v
}

// GetDatabase returns the Database field value if set, zero value otherwise.
func (o *DBRP) GetDatabase() string {
	if o == nil || o.Database == nil {
		var ret string
		return ret
	}
	return *o.Database
}

// GetDatabaseOk returns a tuple with the Database field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DBRP) GetDatabaseOk() (*string, bool) {
	if o == nil || o.Database == nil {
		return nil, false
	}
	return o.Database, true
}

// HasDatabase returns a boolean if a field has been set.
func (o *DBRP) HasDatabase() bool {
	if o != nil && o.Database != nil {
		return true
	}

	return false
}

// SetDatabase gets a reference to the given string and assigns it to the Database field.
func (o *DBRP) SetDatabase(v string) {
	o.Database = &v
}

// GetRetentionPolicy returns the RetentionPolicy field value if set, zero value otherwise.
func (o *DBRP) GetRetentionPolicy() string {
	if o == nil || o.RetentionPolicy == nil {
		var ret string
		return ret
	}
	return *o.RetentionPolicy
}

// GetRetentionPolicyOk returns a tuple with the RetentionPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DBRP) GetRetentionPolicyOk() (*string, bool) {
	if o == nil || o.RetentionPolicy == nil {
		return nil, false
	}
	return o.RetentionPolicy, true
}

// HasRetentionPolicy returns a boolean if a field has been set.
func (o *DBRP) HasRetentionPolicy() bool {
	if o != nil && o.RetentionPolicy != nil {
		return true
	}

	return false
}

// SetRetentionPolicy gets a reference to the given string and assigns it to the RetentionPolicy field.
func (o *DBRP) SetRetentionPolicy(v string) {
	o.RetentionPolicy = &v
}

// GetDefault returns the Default field value if set, zero value otherwise.
func (o *DBRP) GetDefault() bool {
	if o == nil || o.Default == nil {
		var ret bool
		return ret
	}
	return *o.Default
}

// GetDefaultOk returns a tuple with the Default field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DBRP) GetDefaultOk() (*bool, bool) {
	if o == nil || o.Default == nil {
		return nil, false
	}
	return o.Default, true
}

// HasDefault returns a boolean if a field has been set.
func (o *DBRP) HasDefault() bool {
	if o != nil && o.Default != nil {
		return true
	}

	return false
}

// SetDefault gets a reference to the given bool and assigns it to the Default field.
func (o *DBRP) SetDefault(v bool) {
	o.Default = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *DBRP) GetLinks() Links {
	if o == nil || o.Links == nil {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DBRP) GetLinksOk() (*Links, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *DBRP) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *DBRP) SetLinks(v Links) {
	o.Links = &v
}

func (o DBRP) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.OrgID != nil {
		toSerialize["orgID"] = o.OrgID
	}
	if o.Org != nil {
		toSerialize["org"] = o.Org
	}
	if o.BucketID != nil {
		toSerialize["bucketID"] = o.BucketID
	}
	if o.Database != nil {
		toSerialize["database"] = o.Database
	}
	if o.RetentionPolicy != nil {
		toSerialize["retention_policy"] = o.RetentionPolicy
	}
	if o.Default != nil {
		toSerialize["default"] = o.Default
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableDBRP struct {
	value *DBRP
	isSet bool
}

func (v NullableDBRP) Get() *DBRP {
	return v.value
}

func (v *NullableDBRP) Set(val *DBRP) {
	v.value = val
	v.isSet = true
}

func (v NullableDBRP) IsSet() bool {
	return v.isSet
}

func (v *NullableDBRP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDBRP(val *DBRP) *NullableDBRP {
	return &NullableDBRP{value: val, isSet: true}
}

func (v NullableDBRP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDBRP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
