/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// DBRPs struct for DBRPs
type DBRPs struct {
	Content *[]DBRP `json:"content,omitempty" yaml:"content,omitempty"`
}

// NewDBRPs instantiates a new DBRPs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDBRPs() *DBRPs {
	this := DBRPs{}
	return &this
}

// NewDBRPsWithDefaults instantiates a new DBRPs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDBRPsWithDefaults() *DBRPs {
	this := DBRPs{}
	return &this
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *DBRPs) GetContent() []DBRP {
	if o == nil || o.Content == nil {
		var ret []DBRP
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DBRPs) GetContentOk() (*[]DBRP, bool) {
	if o == nil || o.Content == nil {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *DBRPs) HasContent() bool {
	if o != nil && o.Content != nil {
		return true
	}

	return false
}

// SetContent gets a reference to the given []DBRP and assigns it to the Content field.
func (o *DBRPs) SetContent(v []DBRP) {
	o.Content = &v
}

func (o DBRPs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Content != nil {
		toSerialize["content"] = o.Content
	}
	return json.Marshal(toSerialize)
}

type NullableDBRPs struct {
	value *DBRPs
	isSet bool
}

func (v NullableDBRPs) Get() *DBRPs {
	return v.value
}

func (v *NullableDBRPs) Set(val *DBRPs) {
	v.value = val
	v.isSet = true
}

func (v NullableDBRPs) IsSet() bool {
	return v.isSet
}

func (v *NullableDBRPs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDBRPs(val *DBRPs) *NullableDBRPs {
	return &NullableDBRPs{value: val, isSet: true}
}

func (v NullableDBRPs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDBRPs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
