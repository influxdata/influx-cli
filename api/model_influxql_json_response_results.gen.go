/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// InfluxqlJsonResponseResults struct for InfluxqlJsonResponseResults
type InfluxqlJsonResponseResults struct {
	StatementId *int32                        `json:"statement_id,omitempty" yaml:"statement_id,omitempty"`
	Error       *string                       `json:"error,omitempty" yaml:"error,omitempty"`
	Series      *[]InfluxqlJsonResponseSeries `json:"series,omitempty" yaml:"series,omitempty"`
}

// NewInfluxqlJsonResponseResults instantiates a new InfluxqlJsonResponseResults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfluxqlJsonResponseResults() *InfluxqlJsonResponseResults {
	this := InfluxqlJsonResponseResults{}
	return &this
}

// NewInfluxqlJsonResponseResultsWithDefaults instantiates a new InfluxqlJsonResponseResults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfluxqlJsonResponseResultsWithDefaults() *InfluxqlJsonResponseResults {
	this := InfluxqlJsonResponseResults{}
	return &this
}

// GetStatementId returns the StatementId field value if set, zero value otherwise.
func (o *InfluxqlJsonResponseResults) GetStatementId() int32 {
	if o == nil || o.StatementId == nil {
		var ret int32
		return ret
	}
	return *o.StatementId
}

// GetStatementIdOk returns a tuple with the StatementId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfluxqlJsonResponseResults) GetStatementIdOk() (*int32, bool) {
	if o == nil || o.StatementId == nil {
		return nil, false
	}
	return o.StatementId, true
}

// HasStatementId returns a boolean if a field has been set.
func (o *InfluxqlJsonResponseResults) HasStatementId() bool {
	if o != nil && o.StatementId != nil {
		return true
	}

	return false
}

// SetStatementId gets a reference to the given int32 and assigns it to the StatementId field.
func (o *InfluxqlJsonResponseResults) SetStatementId(v int32) {
	o.StatementId = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *InfluxqlJsonResponseResults) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfluxqlJsonResponseResults) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *InfluxqlJsonResponseResults) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *InfluxqlJsonResponseResults) SetError(v string) {
	o.Error = &v
}

// GetSeries returns the Series field value if set, zero value otherwise.
func (o *InfluxqlJsonResponseResults) GetSeries() []InfluxqlJsonResponseSeries {
	if o == nil || o.Series == nil {
		var ret []InfluxqlJsonResponseSeries
		return ret
	}
	return *o.Series
}

// GetSeriesOk returns a tuple with the Series field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfluxqlJsonResponseResults) GetSeriesOk() (*[]InfluxqlJsonResponseSeries, bool) {
	if o == nil || o.Series == nil {
		return nil, false
	}
	return o.Series, true
}

// HasSeries returns a boolean if a field has been set.
func (o *InfluxqlJsonResponseResults) HasSeries() bool {
	if o != nil && o.Series != nil {
		return true
	}

	return false
}

// SetSeries gets a reference to the given []InfluxqlJsonResponseSeries and assigns it to the Series field.
func (o *InfluxqlJsonResponseResults) SetSeries(v []InfluxqlJsonResponseSeries) {
	o.Series = &v
}

func (o InfluxqlJsonResponseResults) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StatementId != nil {
		toSerialize["statement_id"] = o.StatementId
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Series != nil {
		toSerialize["series"] = o.Series
	}
	return json.Marshal(toSerialize)
}

type NullableInfluxqlJsonResponseResults struct {
	value *InfluxqlJsonResponseResults
	isSet bool
}

func (v NullableInfluxqlJsonResponseResults) Get() *InfluxqlJsonResponseResults {
	return v.value
}

func (v *NullableInfluxqlJsonResponseResults) Set(val *InfluxqlJsonResponseResults) {
	v.value = val
	v.isSet = true
}

func (v NullableInfluxqlJsonResponseResults) IsSet() bool {
	return v.isSet
}

func (v *NullableInfluxqlJsonResponseResults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfluxqlJsonResponseResults(val *InfluxqlJsonResponseResults) *NullableInfluxqlJsonResponseResults {
	return &NullableInfluxqlJsonResponseResults{value: val, isSet: true}
}

func (v NullableInfluxqlJsonResponseResults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfluxqlJsonResponseResults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
