/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// RemoteConnenctionUpdateRequest struct for RemoteConnenctionUpdateRequest
type RemoteConnenctionUpdateRequest struct {
	Name             *string `json:"name,omitempty" yaml:"name,omitempty"`
	Description      *string `json:"description,omitempty" yaml:"description,omitempty"`
	RemoteURL        *string `json:"remoteURL,omitempty" yaml:"remoteURL,omitempty"`
	RemoteAPIToken   *string `json:"remoteAPIToken,omitempty" yaml:"remoteAPIToken,omitempty"`
	RemoteOrgID      *string `json:"remoteOrgID,omitempty" yaml:"remoteOrgID,omitempty"`
	AllowInsecureTLS *bool   `json:"allowInsecureTLS,omitempty" yaml:"allowInsecureTLS,omitempty"`
}

// NewRemoteConnenctionUpdateRequest instantiates a new RemoteConnenctionUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteConnenctionUpdateRequest() *RemoteConnenctionUpdateRequest {
	this := RemoteConnenctionUpdateRequest{}
	var allowInsecureTLS bool = false
	this.AllowInsecureTLS = &allowInsecureTLS
	return &this
}

// NewRemoteConnenctionUpdateRequestWithDefaults instantiates a new RemoteConnenctionUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteConnenctionUpdateRequestWithDefaults() *RemoteConnenctionUpdateRequest {
	this := RemoteConnenctionUpdateRequest{}
	var allowInsecureTLS bool = false
	this.AllowInsecureTLS = &allowInsecureTLS
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RemoteConnenctionUpdateRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConnenctionUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RemoteConnenctionUpdateRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RemoteConnenctionUpdateRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RemoteConnenctionUpdateRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConnenctionUpdateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RemoteConnenctionUpdateRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RemoteConnenctionUpdateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetRemoteURL returns the RemoteURL field value if set, zero value otherwise.
func (o *RemoteConnenctionUpdateRequest) GetRemoteURL() string {
	if o == nil || o.RemoteURL == nil {
		var ret string
		return ret
	}
	return *o.RemoteURL
}

// GetRemoteURLOk returns a tuple with the RemoteURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConnenctionUpdateRequest) GetRemoteURLOk() (*string, bool) {
	if o == nil || o.RemoteURL == nil {
		return nil, false
	}
	return o.RemoteURL, true
}

// HasRemoteURL returns a boolean if a field has been set.
func (o *RemoteConnenctionUpdateRequest) HasRemoteURL() bool {
	if o != nil && o.RemoteURL != nil {
		return true
	}

	return false
}

// SetRemoteURL gets a reference to the given string and assigns it to the RemoteURL field.
func (o *RemoteConnenctionUpdateRequest) SetRemoteURL(v string) {
	o.RemoteURL = &v
}

// GetRemoteAPIToken returns the RemoteAPIToken field value if set, zero value otherwise.
func (o *RemoteConnenctionUpdateRequest) GetRemoteAPIToken() string {
	if o == nil || o.RemoteAPIToken == nil {
		var ret string
		return ret
	}
	return *o.RemoteAPIToken
}

// GetRemoteAPITokenOk returns a tuple with the RemoteAPIToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConnenctionUpdateRequest) GetRemoteAPITokenOk() (*string, bool) {
	if o == nil || o.RemoteAPIToken == nil {
		return nil, false
	}
	return o.RemoteAPIToken, true
}

// HasRemoteAPIToken returns a boolean if a field has been set.
func (o *RemoteConnenctionUpdateRequest) HasRemoteAPIToken() bool {
	if o != nil && o.RemoteAPIToken != nil {
		return true
	}

	return false
}

// SetRemoteAPIToken gets a reference to the given string and assigns it to the RemoteAPIToken field.
func (o *RemoteConnenctionUpdateRequest) SetRemoteAPIToken(v string) {
	o.RemoteAPIToken = &v
}

// GetRemoteOrgID returns the RemoteOrgID field value if set, zero value otherwise.
func (o *RemoteConnenctionUpdateRequest) GetRemoteOrgID() string {
	if o == nil || o.RemoteOrgID == nil {
		var ret string
		return ret
	}
	return *o.RemoteOrgID
}

// GetRemoteOrgIDOk returns a tuple with the RemoteOrgID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConnenctionUpdateRequest) GetRemoteOrgIDOk() (*string, bool) {
	if o == nil || o.RemoteOrgID == nil {
		return nil, false
	}
	return o.RemoteOrgID, true
}

// HasRemoteOrgID returns a boolean if a field has been set.
func (o *RemoteConnenctionUpdateRequest) HasRemoteOrgID() bool {
	if o != nil && o.RemoteOrgID != nil {
		return true
	}

	return false
}

// SetRemoteOrgID gets a reference to the given string and assigns it to the RemoteOrgID field.
func (o *RemoteConnenctionUpdateRequest) SetRemoteOrgID(v string) {
	o.RemoteOrgID = &v
}

// GetAllowInsecureTLS returns the AllowInsecureTLS field value if set, zero value otherwise.
func (o *RemoteConnenctionUpdateRequest) GetAllowInsecureTLS() bool {
	if o == nil || o.AllowInsecureTLS == nil {
		var ret bool
		return ret
	}
	return *o.AllowInsecureTLS
}

// GetAllowInsecureTLSOk returns a tuple with the AllowInsecureTLS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteConnenctionUpdateRequest) GetAllowInsecureTLSOk() (*bool, bool) {
	if o == nil || o.AllowInsecureTLS == nil {
		return nil, false
	}
	return o.AllowInsecureTLS, true
}

// HasAllowInsecureTLS returns a boolean if a field has been set.
func (o *RemoteConnenctionUpdateRequest) HasAllowInsecureTLS() bool {
	if o != nil && o.AllowInsecureTLS != nil {
		return true
	}

	return false
}

// SetAllowInsecureTLS gets a reference to the given bool and assigns it to the AllowInsecureTLS field.
func (o *RemoteConnenctionUpdateRequest) SetAllowInsecureTLS(v bool) {
	o.AllowInsecureTLS = &v
}

func (o RemoteConnenctionUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.RemoteURL != nil {
		toSerialize["remoteURL"] = o.RemoteURL
	}
	if o.RemoteAPIToken != nil {
		toSerialize["remoteAPIToken"] = o.RemoteAPIToken
	}
	if o.RemoteOrgID != nil {
		toSerialize["remoteOrgID"] = o.RemoteOrgID
	}
	if o.AllowInsecureTLS != nil {
		toSerialize["allowInsecureTLS"] = o.AllowInsecureTLS
	}
	return json.Marshal(toSerialize)
}

type NullableRemoteConnenctionUpdateRequest struct {
	value *RemoteConnenctionUpdateRequest
	isSet bool
}

func (v NullableRemoteConnenctionUpdateRequest) Get() *RemoteConnenctionUpdateRequest {
	return v.value
}

func (v *NullableRemoteConnenctionUpdateRequest) Set(val *RemoteConnenctionUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteConnenctionUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteConnenctionUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteConnenctionUpdateRequest(val *RemoteConnenctionUpdateRequest) *NullableRemoteConnenctionUpdateRequest {
	return &NullableRemoteConnenctionUpdateRequest{value: val, isSet: true}
}

func (v NullableRemoteConnenctionUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteConnenctionUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
