/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ReplicationUpdateRequest struct for ReplicationUpdateRequest
type ReplicationUpdateRequest struct {
	Name                 *string `json:"name,omitempty" yaml:"name,omitempty"`
	Description          *string `json:"description,omitempty" yaml:"description,omitempty"`
	RemoteID             *string `json:"remoteID,omitempty" yaml:"remoteID,omitempty"`
	RemoteBucketID       *string `json:"remoteBucketID,omitempty" yaml:"remoteBucketID,omitempty"`
	RemoteBucketName     *string `json:"remoteBucketName,omitempty" yaml:"remoteBucketName,omitempty"`
	MaxQueueSizeBytes    *int64  `json:"maxQueueSizeBytes,omitempty" yaml:"maxQueueSizeBytes,omitempty"`
	DropNonRetryableData *bool   `json:"dropNonRetryableData,omitempty" yaml:"dropNonRetryableData,omitempty"`
	MaxAgeSeconds        *int64  `json:"maxAgeSeconds,omitempty" yaml:"maxAgeSeconds,omitempty"`
}

// NewReplicationUpdateRequest instantiates a new ReplicationUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationUpdateRequest() *ReplicationUpdateRequest {
	this := ReplicationUpdateRequest{}
	return &this
}

// NewReplicationUpdateRequestWithDefaults instantiates a new ReplicationUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationUpdateRequestWithDefaults() *ReplicationUpdateRequest {
	this := ReplicationUpdateRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ReplicationUpdateRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ReplicationUpdateRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ReplicationUpdateRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ReplicationUpdateRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ReplicationUpdateRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ReplicationUpdateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetRemoteID returns the RemoteID field value if set, zero value otherwise.
func (o *ReplicationUpdateRequest) GetRemoteID() string {
	if o == nil || o.RemoteID == nil {
		var ret string
		return ret
	}
	return *o.RemoteID
}

// GetRemoteIDOk returns a tuple with the RemoteID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdateRequest) GetRemoteIDOk() (*string, bool) {
	if o == nil || o.RemoteID == nil {
		return nil, false
	}
	return o.RemoteID, true
}

// HasRemoteID returns a boolean if a field has been set.
func (o *ReplicationUpdateRequest) HasRemoteID() bool {
	if o != nil && o.RemoteID != nil {
		return true
	}

	return false
}

// SetRemoteID gets a reference to the given string and assigns it to the RemoteID field.
func (o *ReplicationUpdateRequest) SetRemoteID(v string) {
	o.RemoteID = &v
}

// GetRemoteBucketID returns the RemoteBucketID field value if set, zero value otherwise.
func (o *ReplicationUpdateRequest) GetRemoteBucketID() string {
	if o == nil || o.RemoteBucketID == nil {
		var ret string
		return ret
	}
	return *o.RemoteBucketID
}

// GetRemoteBucketIDOk returns a tuple with the RemoteBucketID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdateRequest) GetRemoteBucketIDOk() (*string, bool) {
	if o == nil || o.RemoteBucketID == nil {
		return nil, false
	}
	return o.RemoteBucketID, true
}

// HasRemoteBucketID returns a boolean if a field has been set.
func (o *ReplicationUpdateRequest) HasRemoteBucketID() bool {
	if o != nil && o.RemoteBucketID != nil {
		return true
	}

	return false
}

// SetRemoteBucketID gets a reference to the given string and assigns it to the RemoteBucketID field.
func (o *ReplicationUpdateRequest) SetRemoteBucketID(v string) {
	o.RemoteBucketID = &v
}

// GetRemoteBucketName returns the RemoteBucketName field value if set, zero value otherwise.
func (o *ReplicationUpdateRequest) GetRemoteBucketName() string {
	if o == nil || o.RemoteBucketName == nil {
		var ret string
		return ret
	}
	return *o.RemoteBucketName
}

// GetRemoteBucketNameOk returns a tuple with the RemoteBucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdateRequest) GetRemoteBucketNameOk() (*string, bool) {
	if o == nil || o.RemoteBucketName == nil {
		return nil, false
	}
	return o.RemoteBucketName, true
}

// HasRemoteBucketName returns a boolean if a field has been set.
func (o *ReplicationUpdateRequest) HasRemoteBucketName() bool {
	if o != nil && o.RemoteBucketName != nil {
		return true
	}

	return false
}

// SetRemoteBucketName gets a reference to the given string and assigns it to the RemoteBucketName field.
func (o *ReplicationUpdateRequest) SetRemoteBucketName(v string) {
	o.RemoteBucketName = &v
}

// GetMaxQueueSizeBytes returns the MaxQueueSizeBytes field value if set, zero value otherwise.
func (o *ReplicationUpdateRequest) GetMaxQueueSizeBytes() int64 {
	if o == nil || o.MaxQueueSizeBytes == nil {
		var ret int64
		return ret
	}
	return *o.MaxQueueSizeBytes
}

// GetMaxQueueSizeBytesOk returns a tuple with the MaxQueueSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdateRequest) GetMaxQueueSizeBytesOk() (*int64, bool) {
	if o == nil || o.MaxQueueSizeBytes == nil {
		return nil, false
	}
	return o.MaxQueueSizeBytes, true
}

// HasMaxQueueSizeBytes returns a boolean if a field has been set.
func (o *ReplicationUpdateRequest) HasMaxQueueSizeBytes() bool {
	if o != nil && o.MaxQueueSizeBytes != nil {
		return true
	}

	return false
}

// SetMaxQueueSizeBytes gets a reference to the given int64 and assigns it to the MaxQueueSizeBytes field.
func (o *ReplicationUpdateRequest) SetMaxQueueSizeBytes(v int64) {
	o.MaxQueueSizeBytes = &v
}

// GetDropNonRetryableData returns the DropNonRetryableData field value if set, zero value otherwise.
func (o *ReplicationUpdateRequest) GetDropNonRetryableData() bool {
	if o == nil || o.DropNonRetryableData == nil {
		var ret bool
		return ret
	}
	return *o.DropNonRetryableData
}

// GetDropNonRetryableDataOk returns a tuple with the DropNonRetryableData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdateRequest) GetDropNonRetryableDataOk() (*bool, bool) {
	if o == nil || o.DropNonRetryableData == nil {
		return nil, false
	}
	return o.DropNonRetryableData, true
}

// HasDropNonRetryableData returns a boolean if a field has been set.
func (o *ReplicationUpdateRequest) HasDropNonRetryableData() bool {
	if o != nil && o.DropNonRetryableData != nil {
		return true
	}

	return false
}

// SetDropNonRetryableData gets a reference to the given bool and assigns it to the DropNonRetryableData field.
func (o *ReplicationUpdateRequest) SetDropNonRetryableData(v bool) {
	o.DropNonRetryableData = &v
}

// GetMaxAgeSeconds returns the MaxAgeSeconds field value if set, zero value otherwise.
func (o *ReplicationUpdateRequest) GetMaxAgeSeconds() int64 {
	if o == nil || o.MaxAgeSeconds == nil {
		var ret int64
		return ret
	}
	return *o.MaxAgeSeconds
}

// GetMaxAgeSecondsOk returns a tuple with the MaxAgeSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationUpdateRequest) GetMaxAgeSecondsOk() (*int64, bool) {
	if o == nil || o.MaxAgeSeconds == nil {
		return nil, false
	}
	return o.MaxAgeSeconds, true
}

// HasMaxAgeSeconds returns a boolean if a field has been set.
func (o *ReplicationUpdateRequest) HasMaxAgeSeconds() bool {
	if o != nil && o.MaxAgeSeconds != nil {
		return true
	}

	return false
}

// SetMaxAgeSeconds gets a reference to the given int64 and assigns it to the MaxAgeSeconds field.
func (o *ReplicationUpdateRequest) SetMaxAgeSeconds(v int64) {
	o.MaxAgeSeconds = &v
}

func (o ReplicationUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.RemoteID != nil {
		toSerialize["remoteID"] = o.RemoteID
	}
	if o.RemoteBucketID != nil {
		toSerialize["remoteBucketID"] = o.RemoteBucketID
	}
	if o.RemoteBucketName != nil {
		toSerialize["remoteBucketName"] = o.RemoteBucketName
	}
	if o.MaxQueueSizeBytes != nil {
		toSerialize["maxQueueSizeBytes"] = o.MaxQueueSizeBytes
	}
	if o.DropNonRetryableData != nil {
		toSerialize["dropNonRetryableData"] = o.DropNonRetryableData
	}
	if o.MaxAgeSeconds != nil {
		toSerialize["maxAgeSeconds"] = o.MaxAgeSeconds
	}
	return json.Marshal(toSerialize)
}

type NullableReplicationUpdateRequest struct {
	value *ReplicationUpdateRequest
	isSet bool
}

func (v NullableReplicationUpdateRequest) Get() *ReplicationUpdateRequest {
	return v.value
}

func (v *NullableReplicationUpdateRequest) Set(val *ReplicationUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationUpdateRequest(val *ReplicationUpdateRequest) *NullableReplicationUpdateRequest {
	return &NullableReplicationUpdateRequest{value: val, isSet: true}
}

func (v NullableReplicationUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
