/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// ResourceOwners struct for ResourceOwners
type ResourceOwners struct {
	Links *UsersLinks      `json:"links,omitempty" yaml:"links,omitempty"`
	Users *[]ResourceOwner `json:"users,omitempty" yaml:"users,omitempty"`
}

// NewResourceOwners instantiates a new ResourceOwners object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceOwners() *ResourceOwners {
	this := ResourceOwners{}
	return &this
}

// NewResourceOwnersWithDefaults instantiates a new ResourceOwners object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceOwnersWithDefaults() *ResourceOwners {
	this := ResourceOwners{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ResourceOwners) GetLinks() UsersLinks {
	if o == nil || o.Links == nil {
		var ret UsersLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceOwners) GetLinksOk() (*UsersLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ResourceOwners) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given UsersLinks and assigns it to the Links field.
func (o *ResourceOwners) SetLinks(v UsersLinks) {
	o.Links = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *ResourceOwners) GetUsers() []ResourceOwner {
	if o == nil || o.Users == nil {
		var ret []ResourceOwner
		return ret
	}
	return *o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceOwners) GetUsersOk() (*[]ResourceOwner, bool) {
	if o == nil || o.Users == nil {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *ResourceOwners) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []ResourceOwner and assigns it to the Users field.
func (o *ResourceOwners) SetUsers(v []ResourceOwner) {
	o.Users = &v
}

func (o ResourceOwners) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	return json.Marshal(toSerialize)
}

type NullableResourceOwners struct {
	value *ResourceOwners
	isSet bool
}

func (v NullableResourceOwners) Get() *ResourceOwners {
	return v.value
}

func (v *NullableResourceOwners) Set(val *ResourceOwners) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceOwners) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceOwners) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceOwners(val *ResourceOwners) *NullableResourceOwners {
	return &NullableResourceOwners{value: val, isSet: true}
}

func (v NullableResourceOwners) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceOwners) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
