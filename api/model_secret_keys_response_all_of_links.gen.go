/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// SecretKeysResponseAllOfLinks struct for SecretKeysResponseAllOfLinks
type SecretKeysResponseAllOfLinks struct {
	Self *string `json:"self,omitempty"`
	Org  *string `json:"org,omitempty"`
}

// NewSecretKeysResponseAllOfLinks instantiates a new SecretKeysResponseAllOfLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretKeysResponseAllOfLinks() *SecretKeysResponseAllOfLinks {
	this := SecretKeysResponseAllOfLinks{}
	return &this
}

// NewSecretKeysResponseAllOfLinksWithDefaults instantiates a new SecretKeysResponseAllOfLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretKeysResponseAllOfLinksWithDefaults() *SecretKeysResponseAllOfLinks {
	this := SecretKeysResponseAllOfLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *SecretKeysResponseAllOfLinks) GetSelf() string {
	if o == nil || o.Self == nil {
		var ret string
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretKeysResponseAllOfLinks) GetSelfOk() (*string, bool) {
	if o == nil || o.Self == nil {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *SecretKeysResponseAllOfLinks) HasSelf() bool {
	if o != nil && o.Self != nil {
		return true
	}

	return false
}

// SetSelf gets a reference to the given string and assigns it to the Self field.
func (o *SecretKeysResponseAllOfLinks) SetSelf(v string) {
	o.Self = &v
}

// GetOrg returns the Org field value if set, zero value otherwise.
func (o *SecretKeysResponseAllOfLinks) GetOrg() string {
	if o == nil || o.Org == nil {
		var ret string
		return ret
	}
	return *o.Org
}

// GetOrgOk returns a tuple with the Org field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretKeysResponseAllOfLinks) GetOrgOk() (*string, bool) {
	if o == nil || o.Org == nil {
		return nil, false
	}
	return o.Org, true
}

// HasOrg returns a boolean if a field has been set.
func (o *SecretKeysResponseAllOfLinks) HasOrg() bool {
	if o != nil && o.Org != nil {
		return true
	}

	return false
}

// SetOrg gets a reference to the given string and assigns it to the Org field.
func (o *SecretKeysResponseAllOfLinks) SetOrg(v string) {
	o.Org = &v
}

func (o SecretKeysResponseAllOfLinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Self != nil {
		toSerialize["self"] = o.Self
	}
	if o.Org != nil {
		toSerialize["org"] = o.Org
	}
	return json.Marshal(toSerialize)
}

type NullableSecretKeysResponseAllOfLinks struct {
	value *SecretKeysResponseAllOfLinks
	isSet bool
}

func (v NullableSecretKeysResponseAllOfLinks) Get() *SecretKeysResponseAllOfLinks {
	return v.value
}

func (v *NullableSecretKeysResponseAllOfLinks) Set(val *SecretKeysResponseAllOfLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretKeysResponseAllOfLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretKeysResponseAllOfLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretKeysResponseAllOfLinks(val *SecretKeysResponseAllOfLinks) *NullableSecretKeysResponseAllOfLinks {
	return &NullableSecretKeysResponseAllOfLinks{value: val, isSet: true}
}

func (v NullableSecretKeysResponseAllOfLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretKeysResponseAllOfLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
