/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// StackEventResourceAssociation struct for StackEventResourceAssociation
type StackEventResourceAssociation struct {
	Kind     string `json:"kind" yaml:"kind"`
	MetaName string `json:"metaName" yaml:"metaName"`
}

// NewStackEventResourceAssociation instantiates a new StackEventResourceAssociation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStackEventResourceAssociation(kind string, metaName string) *StackEventResourceAssociation {
	this := StackEventResourceAssociation{}
	this.Kind = kind
	this.MetaName = metaName
	return &this
}

// NewStackEventResourceAssociationWithDefaults instantiates a new StackEventResourceAssociation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStackEventResourceAssociationWithDefaults() *StackEventResourceAssociation {
	this := StackEventResourceAssociation{}
	return &this
}

// GetKind returns the Kind field value
func (o *StackEventResourceAssociation) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *StackEventResourceAssociation) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *StackEventResourceAssociation) SetKind(v string) {
	o.Kind = v
}

// GetMetaName returns the MetaName field value
func (o *StackEventResourceAssociation) GetMetaName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MetaName
}

// GetMetaNameOk returns a tuple with the MetaName field value
// and a boolean to check if the value has been set.
func (o *StackEventResourceAssociation) GetMetaNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MetaName, true
}

// SetMetaName sets field value
func (o *StackEventResourceAssociation) SetMetaName(v string) {
	o.MetaName = v
}

func (o StackEventResourceAssociation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["metaName"] = o.MetaName
	}
	return json.Marshal(toSerialize)
}

type NullableStackEventResourceAssociation struct {
	value *StackEventResourceAssociation
	isSet bool
}

func (v NullableStackEventResourceAssociation) Get() *StackEventResourceAssociation {
	return v.value
}

func (v *NullableStackEventResourceAssociation) Set(val *StackEventResourceAssociation) {
	v.value = val
	v.isSet = true
}

func (v NullableStackEventResourceAssociation) IsSet() bool {
	return v.isSet
}

func (v *NullableStackEventResourceAssociation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStackEventResourceAssociation(val *StackEventResourceAssociation) *NullableStackEventResourceAssociation {
	return &NullableStackEventResourceAssociation{value: val, isSet: true}
}

func (v NullableStackEventResourceAssociation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStackEventResourceAssociation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
