/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// StackPatchRequestResource struct for StackPatchRequestResource
type StackPatchRequestResource struct {
	ResourceID       string  `json:"resourceID" yaml:"resourceID"`
	Kind             string  `json:"kind" yaml:"kind"`
	TemplateMetaName *string `json:"templateMetaName,omitempty" yaml:"templateMetaName,omitempty"`
}

// NewStackPatchRequestResource instantiates a new StackPatchRequestResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStackPatchRequestResource(resourceID string, kind string) *StackPatchRequestResource {
	this := StackPatchRequestResource{}
	this.ResourceID = resourceID
	this.Kind = kind
	return &this
}

// NewStackPatchRequestResourceWithDefaults instantiates a new StackPatchRequestResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStackPatchRequestResourceWithDefaults() *StackPatchRequestResource {
	this := StackPatchRequestResource{}
	return &this
}

// GetResourceID returns the ResourceID field value
func (o *StackPatchRequestResource) GetResourceID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceID
}

// GetResourceIDOk returns a tuple with the ResourceID field value
// and a boolean to check if the value has been set.
func (o *StackPatchRequestResource) GetResourceIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceID, true
}

// SetResourceID sets field value
func (o *StackPatchRequestResource) SetResourceID(v string) {
	o.ResourceID = v
}

// GetKind returns the Kind field value
func (o *StackPatchRequestResource) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *StackPatchRequestResource) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *StackPatchRequestResource) SetKind(v string) {
	o.Kind = v
}

// GetTemplateMetaName returns the TemplateMetaName field value if set, zero value otherwise.
func (o *StackPatchRequestResource) GetTemplateMetaName() string {
	if o == nil || o.TemplateMetaName == nil {
		var ret string
		return ret
	}
	return *o.TemplateMetaName
}

// GetTemplateMetaNameOk returns a tuple with the TemplateMetaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackPatchRequestResource) GetTemplateMetaNameOk() (*string, bool) {
	if o == nil || o.TemplateMetaName == nil {
		return nil, false
	}
	return o.TemplateMetaName, true
}

// HasTemplateMetaName returns a boolean if a field has been set.
func (o *StackPatchRequestResource) HasTemplateMetaName() bool {
	if o != nil && o.TemplateMetaName != nil {
		return true
	}

	return false
}

// SetTemplateMetaName gets a reference to the given string and assigns it to the TemplateMetaName field.
func (o *StackPatchRequestResource) SetTemplateMetaName(v string) {
	o.TemplateMetaName = &v
}

func (o StackPatchRequestResource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["resourceID"] = o.ResourceID
	}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if o.TemplateMetaName != nil {
		toSerialize["templateMetaName"] = o.TemplateMetaName
	}
	return json.Marshal(toSerialize)
}

type NullableStackPatchRequestResource struct {
	value *StackPatchRequestResource
	isSet bool
}

func (v NullableStackPatchRequestResource) Get() *StackPatchRequestResource {
	return v.value
}

func (v *NullableStackPatchRequestResource) Set(val *StackPatchRequestResource) {
	v.value = val
	v.isSet = true
}

func (v NullableStackPatchRequestResource) IsSet() bool {
	return v.isSet
}

func (v *NullableStackPatchRequestResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStackPatchRequestResource(val *StackPatchRequestResource) *NullableStackPatchRequestResource {
	return &NullableStackPatchRequestResource{value: val, isSet: true}
}

func (v NullableStackPatchRequestResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStackPatchRequestResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
