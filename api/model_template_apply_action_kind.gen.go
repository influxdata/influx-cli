/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// TemplateApplyActionKind the model 'TemplateApplyActionKind'
type TemplateApplyActionKind string

// List of TemplateApplyActionKind
const (
	TEMPLATEAPPLYACTIONKIND_SKIP_KIND     TemplateApplyActionKind = "skipKind"
	TEMPLATEAPPLYACTIONKIND_SKIP_RESOURCE TemplateApplyActionKind = "skipResource"
)

func (v *TemplateApplyActionKind) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TemplateApplyActionKind(value)
	for _, existing := range []TemplateApplyActionKind{"skipKind", "skipResource"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TemplateApplyActionKind", value)
}

// Ptr returns reference to TemplateApplyActionKind value
func (v TemplateApplyActionKind) Ptr() *TemplateApplyActionKind {
	return &v
}

type NullableTemplateApplyActionKind struct {
	value *TemplateApplyActionKind
	isSet bool
}

func (v NullableTemplateApplyActionKind) Get() *TemplateApplyActionKind {
	return v.value
}

func (v *NullableTemplateApplyActionKind) Set(val *TemplateApplyActionKind) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateApplyActionKind) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateApplyActionKind) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateApplyActionKind(val *TemplateApplyActionKind) *NullableTemplateApplyActionKind {
	return &NullableTemplateApplyActionKind{value: val, isSet: true}
}

func (v NullableTemplateApplyActionKind) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateApplyActionKind) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
