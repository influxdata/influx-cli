/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TemplateApplyRemoteRef struct for TemplateApplyRemoteRef
type TemplateApplyRemoteRef struct {
	Url         string  `json:"url" yaml:"url"`
	ContentType *string `json:"contentType,omitempty" yaml:"contentType,omitempty"`
}

// NewTemplateApplyRemoteRef instantiates a new TemplateApplyRemoteRef object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateApplyRemoteRef(url string) *TemplateApplyRemoteRef {
	this := TemplateApplyRemoteRef{}
	this.Url = url
	return &this
}

// NewTemplateApplyRemoteRefWithDefaults instantiates a new TemplateApplyRemoteRef object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateApplyRemoteRefWithDefaults() *TemplateApplyRemoteRef {
	this := TemplateApplyRemoteRef{}
	return &this
}

// GetUrl returns the Url field value
func (o *TemplateApplyRemoteRef) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *TemplateApplyRemoteRef) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *TemplateApplyRemoteRef) SetUrl(v string) {
	o.Url = v
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *TemplateApplyRemoteRef) GetContentType() string {
	if o == nil || o.ContentType == nil {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateApplyRemoteRef) GetContentTypeOk() (*string, bool) {
	if o == nil || o.ContentType == nil {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *TemplateApplyRemoteRef) HasContentType() bool {
	if o != nil && o.ContentType != nil {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *TemplateApplyRemoteRef) SetContentType(v string) {
	o.ContentType = &v
}

func (o TemplateApplyRemoteRef) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if o.ContentType != nil {
		toSerialize["contentType"] = o.ContentType
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateApplyRemoteRef struct {
	value *TemplateApplyRemoteRef
	isSet bool
}

func (v NullableTemplateApplyRemoteRef) Get() *TemplateApplyRemoteRef {
	return v.value
}

func (v *NullableTemplateApplyRemoteRef) Set(val *TemplateApplyRemoteRef) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateApplyRemoteRef) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateApplyRemoteRef) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateApplyRemoteRef(val *TemplateApplyRemoteRef) *NullableTemplateApplyRemoteRef {
	return &NullableTemplateApplyRemoteRef{value: val, isSet: true}
}

func (v NullableTemplateApplyRemoteRef) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateApplyRemoteRef) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
