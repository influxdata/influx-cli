/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TemplateExportResourceFilters struct for TemplateExportResourceFilters
type TemplateExportResourceFilters struct {
	ByLabel        *[]string `json:"byLabel,omitempty"`
	ByResourceKind *[]string `json:"byResourceKind,omitempty"`
}

// NewTemplateExportResourceFilters instantiates a new TemplateExportResourceFilters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateExportResourceFilters() *TemplateExportResourceFilters {
	this := TemplateExportResourceFilters{}
	return &this
}

// NewTemplateExportResourceFiltersWithDefaults instantiates a new TemplateExportResourceFilters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateExportResourceFiltersWithDefaults() *TemplateExportResourceFilters {
	this := TemplateExportResourceFilters{}
	return &this
}

// GetByLabel returns the ByLabel field value if set, zero value otherwise.
func (o *TemplateExportResourceFilters) GetByLabel() []string {
	if o == nil || o.ByLabel == nil {
		var ret []string
		return ret
	}
	return *o.ByLabel
}

// GetByLabelOk returns a tuple with the ByLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateExportResourceFilters) GetByLabelOk() (*[]string, bool) {
	if o == nil || o.ByLabel == nil {
		return nil, false
	}
	return o.ByLabel, true
}

// HasByLabel returns a boolean if a field has been set.
func (o *TemplateExportResourceFilters) HasByLabel() bool {
	if o != nil && o.ByLabel != nil {
		return true
	}

	return false
}

// SetByLabel gets a reference to the given []string and assigns it to the ByLabel field.
func (o *TemplateExportResourceFilters) SetByLabel(v []string) {
	o.ByLabel = &v
}

// GetByResourceKind returns the ByResourceKind field value if set, zero value otherwise.
func (o *TemplateExportResourceFilters) GetByResourceKind() []string {
	if o == nil || o.ByResourceKind == nil {
		var ret []string
		return ret
	}
	return *o.ByResourceKind
}

// GetByResourceKindOk returns a tuple with the ByResourceKind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateExportResourceFilters) GetByResourceKindOk() (*[]string, bool) {
	if o == nil || o.ByResourceKind == nil {
		return nil, false
	}
	return o.ByResourceKind, true
}

// HasByResourceKind returns a boolean if a field has been set.
func (o *TemplateExportResourceFilters) HasByResourceKind() bool {
	if o != nil && o.ByResourceKind != nil {
		return true
	}

	return false
}

// SetByResourceKind gets a reference to the given []string and assigns it to the ByResourceKind field.
func (o *TemplateExportResourceFilters) SetByResourceKind(v []string) {
	o.ByResourceKind = &v
}

func (o TemplateExportResourceFilters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ByLabel != nil {
		toSerialize["byLabel"] = o.ByLabel
	}
	if o.ByResourceKind != nil {
		toSerialize["byResourceKind"] = o.ByResourceKind
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateExportResourceFilters struct {
	value *TemplateExportResourceFilters
	isSet bool
}

func (v NullableTemplateExportResourceFilters) Get() *TemplateExportResourceFilters {
	return v.value
}

func (v *NullableTemplateExportResourceFilters) Set(val *TemplateExportResourceFilters) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateExportResourceFilters) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateExportResourceFilters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateExportResourceFilters(val *TemplateExportResourceFilters) *NullableTemplateExportResourceFilters {
	return &NullableTemplateExportResourceFilters{value: val, isSet: true}
}

func (v NullableTemplateExportResourceFilters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateExportResourceFilters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
