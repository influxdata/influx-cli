/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TemplateExportResources struct for TemplateExportResources
type TemplateExportResources struct {
	Id   *string      `json:"id,omitempty"`
	Kind TemplateKind `json:"kind"`
	Name *string      `json:"name,omitempty"`
}

// NewTemplateExportResources instantiates a new TemplateExportResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateExportResources(kind TemplateKind) *TemplateExportResources {
	this := TemplateExportResources{}
	this.Kind = kind
	return &this
}

// NewTemplateExportResourcesWithDefaults instantiates a new TemplateExportResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateExportResourcesWithDefaults() *TemplateExportResources {
	this := TemplateExportResources{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TemplateExportResources) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateExportResources) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TemplateExportResources) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TemplateExportResources) SetId(v string) {
	o.Id = &v
}

// GetKind returns the Kind field value
func (o *TemplateExportResources) GetKind() TemplateKind {
	if o == nil {
		var ret TemplateKind
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *TemplateExportResources) GetKindOk() (*TemplateKind, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *TemplateExportResources) SetKind(v TemplateKind) {
	o.Kind = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TemplateExportResources) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateExportResources) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TemplateExportResources) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TemplateExportResources) SetName(v string) {
	o.Name = &v
}

func (o TemplateExportResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateExportResources struct {
	value *TemplateExportResources
	isSet bool
}

func (v NullableTemplateExportResources) Get() *TemplateExportResources {
	return v.value
}

func (v *NullableTemplateExportResources) Set(val *TemplateExportResources) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateExportResources) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateExportResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateExportResources(val *TemplateExportResources) *NullableTemplateExportResources {
	return &NullableTemplateExportResources{value: val, isSet: true}
}

func (v NullableTemplateExportResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateExportResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
