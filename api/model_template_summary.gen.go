/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TemplateSummary struct for TemplateSummary
type TemplateSummary struct {
	Sources *[]string                 `json:"sources,omitempty"`
	StackID *string                   `json:"stackID,omitempty"`
	Summary *TemplateSummaryResources `json:"summary,omitempty"`
	Diff    *TemplateSummaryDiff      `json:"diff,omitempty"`
	Errors  *[]TemplateSummaryError   `json:"errors,omitempty"`
}

// NewTemplateSummary instantiates a new TemplateSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateSummary() *TemplateSummary {
	this := TemplateSummary{}
	return &this
}

// NewTemplateSummaryWithDefaults instantiates a new TemplateSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateSummaryWithDefaults() *TemplateSummary {
	this := TemplateSummary{}
	return &this
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *TemplateSummary) GetSources() []string {
	if o == nil || o.Sources == nil {
		var ret []string
		return ret
	}
	return *o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummary) GetSourcesOk() (*[]string, bool) {
	if o == nil || o.Sources == nil {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *TemplateSummary) HasSources() bool {
	if o != nil && o.Sources != nil {
		return true
	}

	return false
}

// SetSources gets a reference to the given []string and assigns it to the Sources field.
func (o *TemplateSummary) SetSources(v []string) {
	o.Sources = &v
}

// GetStackID returns the StackID field value if set, zero value otherwise.
func (o *TemplateSummary) GetStackID() string {
	if o == nil || o.StackID == nil {
		var ret string
		return ret
	}
	return *o.StackID
}

// GetStackIDOk returns a tuple with the StackID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummary) GetStackIDOk() (*string, bool) {
	if o == nil || o.StackID == nil {
		return nil, false
	}
	return o.StackID, true
}

// HasStackID returns a boolean if a field has been set.
func (o *TemplateSummary) HasStackID() bool {
	if o != nil && o.StackID != nil {
		return true
	}

	return false
}

// SetStackID gets a reference to the given string and assigns it to the StackID field.
func (o *TemplateSummary) SetStackID(v string) {
	o.StackID = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *TemplateSummary) GetSummary() TemplateSummaryResources {
	if o == nil || o.Summary == nil {
		var ret TemplateSummaryResources
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummary) GetSummaryOk() (*TemplateSummaryResources, bool) {
	if o == nil || o.Summary == nil {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *TemplateSummary) HasSummary() bool {
	if o != nil && o.Summary != nil {
		return true
	}

	return false
}

// SetSummary gets a reference to the given TemplateSummaryResources and assigns it to the Summary field.
func (o *TemplateSummary) SetSummary(v TemplateSummaryResources) {
	o.Summary = &v
}

// GetDiff returns the Diff field value if set, zero value otherwise.
func (o *TemplateSummary) GetDiff() TemplateSummaryDiff {
	if o == nil || o.Diff == nil {
		var ret TemplateSummaryDiff
		return ret
	}
	return *o.Diff
}

// GetDiffOk returns a tuple with the Diff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummary) GetDiffOk() (*TemplateSummaryDiff, bool) {
	if o == nil || o.Diff == nil {
		return nil, false
	}
	return o.Diff, true
}

// HasDiff returns a boolean if a field has been set.
func (o *TemplateSummary) HasDiff() bool {
	if o != nil && o.Diff != nil {
		return true
	}

	return false
}

// SetDiff gets a reference to the given TemplateSummaryDiff and assigns it to the Diff field.
func (o *TemplateSummary) SetDiff(v TemplateSummaryDiff) {
	o.Diff = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *TemplateSummary) GetErrors() []TemplateSummaryError {
	if o == nil || o.Errors == nil {
		var ret []TemplateSummaryError
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummary) GetErrorsOk() (*[]TemplateSummaryError, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *TemplateSummary) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []TemplateSummaryError and assigns it to the Errors field.
func (o *TemplateSummary) SetErrors(v []TemplateSummaryError) {
	o.Errors = &v
}

func (o TemplateSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Sources != nil {
		toSerialize["sources"] = o.Sources
	}
	if o.StackID != nil {
		toSerialize["stackID"] = o.StackID
	}
	if o.Summary != nil {
		toSerialize["summary"] = o.Summary
	}
	if o.Diff != nil {
		toSerialize["diff"] = o.Diff
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateSummary struct {
	value *TemplateSummary
	isSet bool
}

func (v NullableTemplateSummary) Get() *TemplateSummary {
	return v.value
}

func (v *NullableTemplateSummary) Set(val *TemplateSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateSummary(val *TemplateSummary) *NullableTemplateSummary {
	return &NullableTemplateSummary{value: val, isSet: true}
}

func (v NullableTemplateSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
