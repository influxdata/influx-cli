/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TemplateSummaryDiffLabelMappingAllOf struct for TemplateSummaryDiffLabelMappingAllOf
type TemplateSummaryDiffLabelMappingAllOf struct {
	StateStatus string `json:"stateStatus" yaml:"stateStatus"`
}

// NewTemplateSummaryDiffLabelMappingAllOf instantiates a new TemplateSummaryDiffLabelMappingAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateSummaryDiffLabelMappingAllOf(stateStatus string) *TemplateSummaryDiffLabelMappingAllOf {
	this := TemplateSummaryDiffLabelMappingAllOf{}
	this.StateStatus = stateStatus
	return &this
}

// NewTemplateSummaryDiffLabelMappingAllOfWithDefaults instantiates a new TemplateSummaryDiffLabelMappingAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateSummaryDiffLabelMappingAllOfWithDefaults() *TemplateSummaryDiffLabelMappingAllOf {
	this := TemplateSummaryDiffLabelMappingAllOf{}
	return &this
}

// GetStateStatus returns the StateStatus field value
func (o *TemplateSummaryDiffLabelMappingAllOf) GetStateStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StateStatus
}

// GetStateStatusOk returns a tuple with the StateStatus field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryDiffLabelMappingAllOf) GetStateStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StateStatus, true
}

// SetStateStatus sets field value
func (o *TemplateSummaryDiffLabelMappingAllOf) SetStateStatus(v string) {
	o.StateStatus = v
}

func (o TemplateSummaryDiffLabelMappingAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["stateStatus"] = o.StateStatus
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateSummaryDiffLabelMappingAllOf struct {
	value *TemplateSummaryDiffLabelMappingAllOf
	isSet bool
}

func (v NullableTemplateSummaryDiffLabelMappingAllOf) Get() *TemplateSummaryDiffLabelMappingAllOf {
	return v.value
}

func (v *NullableTemplateSummaryDiffLabelMappingAllOf) Set(val *TemplateSummaryDiffLabelMappingAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateSummaryDiffLabelMappingAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateSummaryDiffLabelMappingAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateSummaryDiffLabelMappingAllOf(val *TemplateSummaryDiffLabelMappingAllOf) *NullableTemplateSummaryDiffLabelMappingAllOf {
	return &NullableTemplateSummaryDiffLabelMappingAllOf{value: val, isSet: true}
}

func (v NullableTemplateSummaryDiffLabelMappingAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateSummaryDiffLabelMappingAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
