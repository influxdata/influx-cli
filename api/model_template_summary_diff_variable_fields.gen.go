/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TemplateSummaryDiffVariableFields struct for TemplateSummaryDiffVariableFields
type TemplateSummaryDiffVariableFields struct {
	Name        string                       `json:"name" yaml:"name"`
	Description *string                      `json:"description,omitempty" yaml:"description,omitempty"`
	Args        *TemplateSummaryVariableArgs `json:"args,omitempty" yaml:"args,omitempty"`
}

// NewTemplateSummaryDiffVariableFields instantiates a new TemplateSummaryDiffVariableFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateSummaryDiffVariableFields(name string) *TemplateSummaryDiffVariableFields {
	this := TemplateSummaryDiffVariableFields{}
	this.Name = name
	return &this
}

// NewTemplateSummaryDiffVariableFieldsWithDefaults instantiates a new TemplateSummaryDiffVariableFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateSummaryDiffVariableFieldsWithDefaults() *TemplateSummaryDiffVariableFields {
	this := TemplateSummaryDiffVariableFields{}
	return &this
}

// GetName returns the Name field value
func (o *TemplateSummaryDiffVariableFields) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryDiffVariableFields) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TemplateSummaryDiffVariableFields) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TemplateSummaryDiffVariableFields) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryDiffVariableFields) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TemplateSummaryDiffVariableFields) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TemplateSummaryDiffVariableFields) SetDescription(v string) {
	o.Description = &v
}

// GetArgs returns the Args field value if set, zero value otherwise.
func (o *TemplateSummaryDiffVariableFields) GetArgs() TemplateSummaryVariableArgs {
	if o == nil || o.Args == nil {
		var ret TemplateSummaryVariableArgs
		return ret
	}
	return *o.Args
}

// GetArgsOk returns a tuple with the Args field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryDiffVariableFields) GetArgsOk() (*TemplateSummaryVariableArgs, bool) {
	if o == nil || o.Args == nil {
		return nil, false
	}
	return o.Args, true
}

// HasArgs returns a boolean if a field has been set.
func (o *TemplateSummaryDiffVariableFields) HasArgs() bool {
	if o != nil && o.Args != nil {
		return true
	}

	return false
}

// SetArgs gets a reference to the given TemplateSummaryVariableArgs and assigns it to the Args field.
func (o *TemplateSummaryDiffVariableFields) SetArgs(v TemplateSummaryVariableArgs) {
	o.Args = &v
}

func (o TemplateSummaryDiffVariableFields) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Args != nil {
		toSerialize["args"] = o.Args
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateSummaryDiffVariableFields struct {
	value *TemplateSummaryDiffVariableFields
	isSet bool
}

func (v NullableTemplateSummaryDiffVariableFields) Get() *TemplateSummaryDiffVariableFields {
	return v.value
}

func (v *NullableTemplateSummaryDiffVariableFields) Set(val *TemplateSummaryDiffVariableFields) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateSummaryDiffVariableFields) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateSummaryDiffVariableFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateSummaryDiffVariableFields(val *TemplateSummaryDiffVariableFields) *NullableTemplateSummaryDiffVariableFields {
	return &NullableTemplateSummaryDiffVariableFields{value: val, isSet: true}
}

func (v NullableTemplateSummaryDiffVariableFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateSummaryDiffVariableFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
