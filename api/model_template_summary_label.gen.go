/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TemplateSummaryLabel struct for TemplateSummaryLabel
type TemplateSummaryLabel struct {
	Kind             *string                              `json:"kind,omitempty"`
	TemplateMetaName *string                              `json:"templateMetaName,omitempty"`
	EnvReferences    *[]TemplateEnvReference              `json:"envReferences,omitempty"`
	Id               *string                              `json:"id,omitempty"`
	OrgID            *string                              `json:"orgID,omitempty"`
	Name             *string                              `json:"name,omitempty"`
	Properties       *TemplateSummaryLabelAllOfProperties `json:"properties,omitempty"`
}

// NewTemplateSummaryLabel instantiates a new TemplateSummaryLabel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateSummaryLabel() *TemplateSummaryLabel {
	this := TemplateSummaryLabel{}
	return &this
}

// NewTemplateSummaryLabelWithDefaults instantiates a new TemplateSummaryLabel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateSummaryLabelWithDefaults() *TemplateSummaryLabel {
	this := TemplateSummaryLabel{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *TemplateSummaryLabel) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryLabel) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *TemplateSummaryLabel) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *TemplateSummaryLabel) SetKind(v string) {
	o.Kind = &v
}

// GetTemplateMetaName returns the TemplateMetaName field value if set, zero value otherwise.
func (o *TemplateSummaryLabel) GetTemplateMetaName() string {
	if o == nil || o.TemplateMetaName == nil {
		var ret string
		return ret
	}
	return *o.TemplateMetaName
}

// GetTemplateMetaNameOk returns a tuple with the TemplateMetaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryLabel) GetTemplateMetaNameOk() (*string, bool) {
	if o == nil || o.TemplateMetaName == nil {
		return nil, false
	}
	return o.TemplateMetaName, true
}

// HasTemplateMetaName returns a boolean if a field has been set.
func (o *TemplateSummaryLabel) HasTemplateMetaName() bool {
	if o != nil && o.TemplateMetaName != nil {
		return true
	}

	return false
}

// SetTemplateMetaName gets a reference to the given string and assigns it to the TemplateMetaName field.
func (o *TemplateSummaryLabel) SetTemplateMetaName(v string) {
	o.TemplateMetaName = &v
}

// GetEnvReferences returns the EnvReferences field value if set, zero value otherwise.
func (o *TemplateSummaryLabel) GetEnvReferences() []TemplateEnvReference {
	if o == nil || o.EnvReferences == nil {
		var ret []TemplateEnvReference
		return ret
	}
	return *o.EnvReferences
}

// GetEnvReferencesOk returns a tuple with the EnvReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryLabel) GetEnvReferencesOk() (*[]TemplateEnvReference, bool) {
	if o == nil || o.EnvReferences == nil {
		return nil, false
	}
	return o.EnvReferences, true
}

// HasEnvReferences returns a boolean if a field has been set.
func (o *TemplateSummaryLabel) HasEnvReferences() bool {
	if o != nil && o.EnvReferences != nil {
		return true
	}

	return false
}

// SetEnvReferences gets a reference to the given []TemplateEnvReference and assigns it to the EnvReferences field.
func (o *TemplateSummaryLabel) SetEnvReferences(v []TemplateEnvReference) {
	o.EnvReferences = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TemplateSummaryLabel) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryLabel) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TemplateSummaryLabel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TemplateSummaryLabel) SetId(v string) {
	o.Id = &v
}

// GetOrgID returns the OrgID field value if set, zero value otherwise.
func (o *TemplateSummaryLabel) GetOrgID() string {
	if o == nil || o.OrgID == nil {
		var ret string
		return ret
	}
	return *o.OrgID
}

// GetOrgIDOk returns a tuple with the OrgID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryLabel) GetOrgIDOk() (*string, bool) {
	if o == nil || o.OrgID == nil {
		return nil, false
	}
	return o.OrgID, true
}

// HasOrgID returns a boolean if a field has been set.
func (o *TemplateSummaryLabel) HasOrgID() bool {
	if o != nil && o.OrgID != nil {
		return true
	}

	return false
}

// SetOrgID gets a reference to the given string and assigns it to the OrgID field.
func (o *TemplateSummaryLabel) SetOrgID(v string) {
	o.OrgID = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TemplateSummaryLabel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryLabel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TemplateSummaryLabel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TemplateSummaryLabel) SetName(v string) {
	o.Name = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *TemplateSummaryLabel) GetProperties() TemplateSummaryLabelAllOfProperties {
	if o == nil || o.Properties == nil {
		var ret TemplateSummaryLabelAllOfProperties
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryLabel) GetPropertiesOk() (*TemplateSummaryLabelAllOfProperties, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *TemplateSummaryLabel) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given TemplateSummaryLabelAllOfProperties and assigns it to the Properties field.
func (o *TemplateSummaryLabel) SetProperties(v TemplateSummaryLabelAllOfProperties) {
	o.Properties = &v
}

func (o TemplateSummaryLabel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.TemplateMetaName != nil {
		toSerialize["templateMetaName"] = o.TemplateMetaName
	}
	if o.EnvReferences != nil {
		toSerialize["envReferences"] = o.EnvReferences
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.OrgID != nil {
		toSerialize["orgID"] = o.OrgID
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateSummaryLabel struct {
	value *TemplateSummaryLabel
	isSet bool
}

func (v NullableTemplateSummaryLabel) Get() *TemplateSummaryLabel {
	return v.value
}

func (v *NullableTemplateSummaryLabel) Set(val *TemplateSummaryLabel) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateSummaryLabel) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateSummaryLabel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateSummaryLabel(val *TemplateSummaryLabel) *NullableTemplateSummaryLabel {
	return &NullableTemplateSummaryLabel{value: val, isSet: true}
}

func (v NullableTemplateSummaryLabel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateSummaryLabel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
