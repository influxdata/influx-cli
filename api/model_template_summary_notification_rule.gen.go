/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TemplateSummaryNotificationRule struct for TemplateSummaryNotificationRule
type TemplateSummaryNotificationRule struct {
	Kind                     *string                 `json:"kind,omitempty"`
	TemplateMetaName         *string                 `json:"templateMetaName,omitempty"`
	EnvReferences            *[]TemplateEnvReference `json:"envReferences,omitempty"`
	LabelAssociations        *[]TemplateSummaryLabel `json:"labelAssociations,omitempty"`
	Name                     *string                 `json:"name,omitempty"`
	Description              *string                 `json:"description,omitempty"`
	EndpointTemplateMetaName *string                 `json:"endpointTemplateMetaName,omitempty"`
	EndpointID               *string                 `json:"endpointID,omitempty"`
	EndpointType             *string                 `json:"endpointType,omitempty"`
	Every                    *string                 `json:"every,omitempty"`
	Offset                   *string                 `json:"offset,omitempty"`
}

// NewTemplateSummaryNotificationRule instantiates a new TemplateSummaryNotificationRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateSummaryNotificationRule() *TemplateSummaryNotificationRule {
	this := TemplateSummaryNotificationRule{}
	return &this
}

// NewTemplateSummaryNotificationRuleWithDefaults instantiates a new TemplateSummaryNotificationRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateSummaryNotificationRuleWithDefaults() *TemplateSummaryNotificationRule {
	this := TemplateSummaryNotificationRule{}
	return &this
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRule) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRule) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRule) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *TemplateSummaryNotificationRule) SetKind(v string) {
	o.Kind = &v
}

// GetTemplateMetaName returns the TemplateMetaName field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRule) GetTemplateMetaName() string {
	if o == nil || o.TemplateMetaName == nil {
		var ret string
		return ret
	}
	return *o.TemplateMetaName
}

// GetTemplateMetaNameOk returns a tuple with the TemplateMetaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRule) GetTemplateMetaNameOk() (*string, bool) {
	if o == nil || o.TemplateMetaName == nil {
		return nil, false
	}
	return o.TemplateMetaName, true
}

// HasTemplateMetaName returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRule) HasTemplateMetaName() bool {
	if o != nil && o.TemplateMetaName != nil {
		return true
	}

	return false
}

// SetTemplateMetaName gets a reference to the given string and assigns it to the TemplateMetaName field.
func (o *TemplateSummaryNotificationRule) SetTemplateMetaName(v string) {
	o.TemplateMetaName = &v
}

// GetEnvReferences returns the EnvReferences field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRule) GetEnvReferences() []TemplateEnvReference {
	if o == nil || o.EnvReferences == nil {
		var ret []TemplateEnvReference
		return ret
	}
	return *o.EnvReferences
}

// GetEnvReferencesOk returns a tuple with the EnvReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRule) GetEnvReferencesOk() (*[]TemplateEnvReference, bool) {
	if o == nil || o.EnvReferences == nil {
		return nil, false
	}
	return o.EnvReferences, true
}

// HasEnvReferences returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRule) HasEnvReferences() bool {
	if o != nil && o.EnvReferences != nil {
		return true
	}

	return false
}

// SetEnvReferences gets a reference to the given []TemplateEnvReference and assigns it to the EnvReferences field.
func (o *TemplateSummaryNotificationRule) SetEnvReferences(v []TemplateEnvReference) {
	o.EnvReferences = &v
}

// GetLabelAssociations returns the LabelAssociations field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRule) GetLabelAssociations() []TemplateSummaryLabel {
	if o == nil || o.LabelAssociations == nil {
		var ret []TemplateSummaryLabel
		return ret
	}
	return *o.LabelAssociations
}

// GetLabelAssociationsOk returns a tuple with the LabelAssociations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRule) GetLabelAssociationsOk() (*[]TemplateSummaryLabel, bool) {
	if o == nil || o.LabelAssociations == nil {
		return nil, false
	}
	return o.LabelAssociations, true
}

// HasLabelAssociations returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRule) HasLabelAssociations() bool {
	if o != nil && o.LabelAssociations != nil {
		return true
	}

	return false
}

// SetLabelAssociations gets a reference to the given []TemplateSummaryLabel and assigns it to the LabelAssociations field.
func (o *TemplateSummaryNotificationRule) SetLabelAssociations(v []TemplateSummaryLabel) {
	o.LabelAssociations = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRule) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRule) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRule) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TemplateSummaryNotificationRule) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRule) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRule) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRule) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TemplateSummaryNotificationRule) SetDescription(v string) {
	o.Description = &v
}

// GetEndpointTemplateMetaName returns the EndpointTemplateMetaName field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRule) GetEndpointTemplateMetaName() string {
	if o == nil || o.EndpointTemplateMetaName == nil {
		var ret string
		return ret
	}
	return *o.EndpointTemplateMetaName
}

// GetEndpointTemplateMetaNameOk returns a tuple with the EndpointTemplateMetaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRule) GetEndpointTemplateMetaNameOk() (*string, bool) {
	if o == nil || o.EndpointTemplateMetaName == nil {
		return nil, false
	}
	return o.EndpointTemplateMetaName, true
}

// HasEndpointTemplateMetaName returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRule) HasEndpointTemplateMetaName() bool {
	if o != nil && o.EndpointTemplateMetaName != nil {
		return true
	}

	return false
}

// SetEndpointTemplateMetaName gets a reference to the given string and assigns it to the EndpointTemplateMetaName field.
func (o *TemplateSummaryNotificationRule) SetEndpointTemplateMetaName(v string) {
	o.EndpointTemplateMetaName = &v
}

// GetEndpointID returns the EndpointID field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRule) GetEndpointID() string {
	if o == nil || o.EndpointID == nil {
		var ret string
		return ret
	}
	return *o.EndpointID
}

// GetEndpointIDOk returns a tuple with the EndpointID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRule) GetEndpointIDOk() (*string, bool) {
	if o == nil || o.EndpointID == nil {
		return nil, false
	}
	return o.EndpointID, true
}

// HasEndpointID returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRule) HasEndpointID() bool {
	if o != nil && o.EndpointID != nil {
		return true
	}

	return false
}

// SetEndpointID gets a reference to the given string and assigns it to the EndpointID field.
func (o *TemplateSummaryNotificationRule) SetEndpointID(v string) {
	o.EndpointID = &v
}

// GetEndpointType returns the EndpointType field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRule) GetEndpointType() string {
	if o == nil || o.EndpointType == nil {
		var ret string
		return ret
	}
	return *o.EndpointType
}

// GetEndpointTypeOk returns a tuple with the EndpointType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRule) GetEndpointTypeOk() (*string, bool) {
	if o == nil || o.EndpointType == nil {
		return nil, false
	}
	return o.EndpointType, true
}

// HasEndpointType returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRule) HasEndpointType() bool {
	if o != nil && o.EndpointType != nil {
		return true
	}

	return false
}

// SetEndpointType gets a reference to the given string and assigns it to the EndpointType field.
func (o *TemplateSummaryNotificationRule) SetEndpointType(v string) {
	o.EndpointType = &v
}

// GetEvery returns the Every field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRule) GetEvery() string {
	if o == nil || o.Every == nil {
		var ret string
		return ret
	}
	return *o.Every
}

// GetEveryOk returns a tuple with the Every field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRule) GetEveryOk() (*string, bool) {
	if o == nil || o.Every == nil {
		return nil, false
	}
	return o.Every, true
}

// HasEvery returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRule) HasEvery() bool {
	if o != nil && o.Every != nil {
		return true
	}

	return false
}

// SetEvery gets a reference to the given string and assigns it to the Every field.
func (o *TemplateSummaryNotificationRule) SetEvery(v string) {
	o.Every = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRule) GetOffset() string {
	if o == nil || o.Offset == nil {
		var ret string
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRule) GetOffsetOk() (*string, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRule) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given string and assigns it to the Offset field.
func (o *TemplateSummaryNotificationRule) SetOffset(v string) {
	o.Offset = &v
}

func (o TemplateSummaryNotificationRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if o.TemplateMetaName != nil {
		toSerialize["templateMetaName"] = o.TemplateMetaName
	}
	if o.EnvReferences != nil {
		toSerialize["envReferences"] = o.EnvReferences
	}
	if o.LabelAssociations != nil {
		toSerialize["labelAssociations"] = o.LabelAssociations
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.EndpointTemplateMetaName != nil {
		toSerialize["endpointTemplateMetaName"] = o.EndpointTemplateMetaName
	}
	if o.EndpointID != nil {
		toSerialize["endpointID"] = o.EndpointID
	}
	if o.EndpointType != nil {
		toSerialize["endpointType"] = o.EndpointType
	}
	if o.Every != nil {
		toSerialize["every"] = o.Every
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateSummaryNotificationRule struct {
	value *TemplateSummaryNotificationRule
	isSet bool
}

func (v NullableTemplateSummaryNotificationRule) Get() *TemplateSummaryNotificationRule {
	return v.value
}

func (v *NullableTemplateSummaryNotificationRule) Set(val *TemplateSummaryNotificationRule) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateSummaryNotificationRule) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateSummaryNotificationRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateSummaryNotificationRule(val *TemplateSummaryNotificationRule) *NullableTemplateSummaryNotificationRule {
	return &NullableTemplateSummaryNotificationRule{value: val, isSet: true}
}

func (v NullableTemplateSummaryNotificationRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateSummaryNotificationRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
