/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TemplateSummaryNotificationRuleAllOf struct for TemplateSummaryNotificationRuleAllOf
type TemplateSummaryNotificationRuleAllOf struct {
	Name                     *string `json:"name,omitempty"`
	Description              *string `json:"description,omitempty"`
	EndpointTemplateMetaName *string `json:"endpointTemplateMetaName,omitempty"`
	EndpointID               *string `json:"endpointID,omitempty"`
	EndpointType             *string `json:"endpointType,omitempty"`
	Every                    *string `json:"every,omitempty"`
	Offset                   *string `json:"offset,omitempty"`
}

// NewTemplateSummaryNotificationRuleAllOf instantiates a new TemplateSummaryNotificationRuleAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateSummaryNotificationRuleAllOf() *TemplateSummaryNotificationRuleAllOf {
	this := TemplateSummaryNotificationRuleAllOf{}
	return &this
}

// NewTemplateSummaryNotificationRuleAllOfWithDefaults instantiates a new TemplateSummaryNotificationRuleAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateSummaryNotificationRuleAllOfWithDefaults() *TemplateSummaryNotificationRuleAllOf {
	this := TemplateSummaryNotificationRuleAllOf{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRuleAllOf) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRuleAllOf) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TemplateSummaryNotificationRuleAllOf) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRuleAllOf) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRuleAllOf) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TemplateSummaryNotificationRuleAllOf) SetDescription(v string) {
	o.Description = &v
}

// GetEndpointTemplateMetaName returns the EndpointTemplateMetaName field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRuleAllOf) GetEndpointTemplateMetaName() string {
	if o == nil || o.EndpointTemplateMetaName == nil {
		var ret string
		return ret
	}
	return *o.EndpointTemplateMetaName
}

// GetEndpointTemplateMetaNameOk returns a tuple with the EndpointTemplateMetaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetEndpointTemplateMetaNameOk() (*string, bool) {
	if o == nil || o.EndpointTemplateMetaName == nil {
		return nil, false
	}
	return o.EndpointTemplateMetaName, true
}

// HasEndpointTemplateMetaName returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRuleAllOf) HasEndpointTemplateMetaName() bool {
	if o != nil && o.EndpointTemplateMetaName != nil {
		return true
	}

	return false
}

// SetEndpointTemplateMetaName gets a reference to the given string and assigns it to the EndpointTemplateMetaName field.
func (o *TemplateSummaryNotificationRuleAllOf) SetEndpointTemplateMetaName(v string) {
	o.EndpointTemplateMetaName = &v
}

// GetEndpointID returns the EndpointID field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRuleAllOf) GetEndpointID() string {
	if o == nil || o.EndpointID == nil {
		var ret string
		return ret
	}
	return *o.EndpointID
}

// GetEndpointIDOk returns a tuple with the EndpointID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetEndpointIDOk() (*string, bool) {
	if o == nil || o.EndpointID == nil {
		return nil, false
	}
	return o.EndpointID, true
}

// HasEndpointID returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRuleAllOf) HasEndpointID() bool {
	if o != nil && o.EndpointID != nil {
		return true
	}

	return false
}

// SetEndpointID gets a reference to the given string and assigns it to the EndpointID field.
func (o *TemplateSummaryNotificationRuleAllOf) SetEndpointID(v string) {
	o.EndpointID = &v
}

// GetEndpointType returns the EndpointType field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRuleAllOf) GetEndpointType() string {
	if o == nil || o.EndpointType == nil {
		var ret string
		return ret
	}
	return *o.EndpointType
}

// GetEndpointTypeOk returns a tuple with the EndpointType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetEndpointTypeOk() (*string, bool) {
	if o == nil || o.EndpointType == nil {
		return nil, false
	}
	return o.EndpointType, true
}

// HasEndpointType returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRuleAllOf) HasEndpointType() bool {
	if o != nil && o.EndpointType != nil {
		return true
	}

	return false
}

// SetEndpointType gets a reference to the given string and assigns it to the EndpointType field.
func (o *TemplateSummaryNotificationRuleAllOf) SetEndpointType(v string) {
	o.EndpointType = &v
}

// GetEvery returns the Every field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRuleAllOf) GetEvery() string {
	if o == nil || o.Every == nil {
		var ret string
		return ret
	}
	return *o.Every
}

// GetEveryOk returns a tuple with the Every field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetEveryOk() (*string, bool) {
	if o == nil || o.Every == nil {
		return nil, false
	}
	return o.Every, true
}

// HasEvery returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRuleAllOf) HasEvery() bool {
	if o != nil && o.Every != nil {
		return true
	}

	return false
}

// SetEvery gets a reference to the given string and assigns it to the Every field.
func (o *TemplateSummaryNotificationRuleAllOf) SetEvery(v string) {
	o.Every = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRuleAllOf) GetOffset() string {
	if o == nil || o.Offset == nil {
		var ret string
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetOffsetOk() (*string, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRuleAllOf) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given string and assigns it to the Offset field.
func (o *TemplateSummaryNotificationRuleAllOf) SetOffset(v string) {
	o.Offset = &v
}

func (o TemplateSummaryNotificationRuleAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.EndpointTemplateMetaName != nil {
		toSerialize["endpointTemplateMetaName"] = o.EndpointTemplateMetaName
	}
	if o.EndpointID != nil {
		toSerialize["endpointID"] = o.EndpointID
	}
	if o.EndpointType != nil {
		toSerialize["endpointType"] = o.EndpointType
	}
	if o.Every != nil {
		toSerialize["every"] = o.Every
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateSummaryNotificationRuleAllOf struct {
	value *TemplateSummaryNotificationRuleAllOf
	isSet bool
}

func (v NullableTemplateSummaryNotificationRuleAllOf) Get() *TemplateSummaryNotificationRuleAllOf {
	return v.value
}

func (v *NullableTemplateSummaryNotificationRuleAllOf) Set(val *TemplateSummaryNotificationRuleAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateSummaryNotificationRuleAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateSummaryNotificationRuleAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateSummaryNotificationRuleAllOf(val *TemplateSummaryNotificationRuleAllOf) *NullableTemplateSummaryNotificationRuleAllOf {
	return &NullableTemplateSummaryNotificationRuleAllOf{value: val, isSet: true}
}

func (v NullableTemplateSummaryNotificationRuleAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateSummaryNotificationRuleAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
