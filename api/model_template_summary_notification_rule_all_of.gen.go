/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TemplateSummaryNotificationRuleAllOf struct for TemplateSummaryNotificationRuleAllOf
type TemplateSummaryNotificationRuleAllOf struct {
	Id                       uint64  `json:"id" yaml:"id"`
	Name                     string  `json:"name" yaml:"name"`
	Description              *string `json:"description,omitempty" yaml:"description,omitempty"`
	EndpointTemplateMetaName string  `json:"endpointTemplateMetaName" yaml:"endpointTemplateMetaName"`
	EndpointID               uint64  `json:"endpointID" yaml:"endpointID"`
	EndpointType             string  `json:"endpointType" yaml:"endpointType"`
	Every                    string  `json:"every" yaml:"every"`
	Offset                   string  `json:"offset" yaml:"offset"`
}

// NewTemplateSummaryNotificationRuleAllOf instantiates a new TemplateSummaryNotificationRuleAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateSummaryNotificationRuleAllOf(id uint64, name string, endpointTemplateMetaName string, endpointID uint64, endpointType string, every string, offset string) *TemplateSummaryNotificationRuleAllOf {
	this := TemplateSummaryNotificationRuleAllOf{}
	this.Id = id
	this.Name = name
	this.EndpointTemplateMetaName = endpointTemplateMetaName
	this.EndpointID = endpointID
	this.EndpointType = endpointType
	this.Every = every
	this.Offset = offset
	return &this
}

// NewTemplateSummaryNotificationRuleAllOfWithDefaults instantiates a new TemplateSummaryNotificationRuleAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateSummaryNotificationRuleAllOfWithDefaults() *TemplateSummaryNotificationRuleAllOf {
	this := TemplateSummaryNotificationRuleAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *TemplateSummaryNotificationRuleAllOf) GetId() uint64 {
	if o == nil {
		var ret uint64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetIdOk() (*uint64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TemplateSummaryNotificationRuleAllOf) SetId(v uint64) {
	o.Id = v
}

// GetName returns the Name field value
func (o *TemplateSummaryNotificationRuleAllOf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TemplateSummaryNotificationRuleAllOf) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TemplateSummaryNotificationRuleAllOf) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TemplateSummaryNotificationRuleAllOf) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TemplateSummaryNotificationRuleAllOf) SetDescription(v string) {
	o.Description = &v
}

// GetEndpointTemplateMetaName returns the EndpointTemplateMetaName field value
func (o *TemplateSummaryNotificationRuleAllOf) GetEndpointTemplateMetaName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndpointTemplateMetaName
}

// GetEndpointTemplateMetaNameOk returns a tuple with the EndpointTemplateMetaName field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetEndpointTemplateMetaNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndpointTemplateMetaName, true
}

// SetEndpointTemplateMetaName sets field value
func (o *TemplateSummaryNotificationRuleAllOf) SetEndpointTemplateMetaName(v string) {
	o.EndpointTemplateMetaName = v
}

// GetEndpointID returns the EndpointID field value
func (o *TemplateSummaryNotificationRuleAllOf) GetEndpointID() uint64 {
	if o == nil {
		var ret uint64
		return ret
	}

	return o.EndpointID
}

// GetEndpointIDOk returns a tuple with the EndpointID field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetEndpointIDOk() (*uint64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndpointID, true
}

// SetEndpointID sets field value
func (o *TemplateSummaryNotificationRuleAllOf) SetEndpointID(v uint64) {
	o.EndpointID = v
}

// GetEndpointType returns the EndpointType field value
func (o *TemplateSummaryNotificationRuleAllOf) GetEndpointType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndpointType
}

// GetEndpointTypeOk returns a tuple with the EndpointType field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetEndpointTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndpointType, true
}

// SetEndpointType sets field value
func (o *TemplateSummaryNotificationRuleAllOf) SetEndpointType(v string) {
	o.EndpointType = v
}

// GetEvery returns the Every field value
func (o *TemplateSummaryNotificationRuleAllOf) GetEvery() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Every
}

// GetEveryOk returns a tuple with the Every field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetEveryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Every, true
}

// SetEvery sets field value
func (o *TemplateSummaryNotificationRuleAllOf) SetEvery(v string) {
	o.Every = v
}

// GetOffset returns the Offset field value
func (o *TemplateSummaryNotificationRuleAllOf) GetOffset() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryNotificationRuleAllOf) GetOffsetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Offset, true
}

// SetOffset sets field value
func (o *TemplateSummaryNotificationRuleAllOf) SetOffset(v string) {
	o.Offset = v
}

func (o TemplateSummaryNotificationRuleAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["endpointTemplateMetaName"] = o.EndpointTemplateMetaName
	}
	if true {
		toSerialize["endpointID"] = o.EndpointID
	}
	if true {
		toSerialize["endpointType"] = o.EndpointType
	}
	if true {
		toSerialize["every"] = o.Every
	}
	if true {
		toSerialize["offset"] = o.Offset
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateSummaryNotificationRuleAllOf struct {
	value *TemplateSummaryNotificationRuleAllOf
	isSet bool
}

func (v NullableTemplateSummaryNotificationRuleAllOf) Get() *TemplateSummaryNotificationRuleAllOf {
	return v.value
}

func (v *NullableTemplateSummaryNotificationRuleAllOf) Set(val *TemplateSummaryNotificationRuleAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateSummaryNotificationRuleAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateSummaryNotificationRuleAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateSummaryNotificationRuleAllOf(val *TemplateSummaryNotificationRuleAllOf) *NullableTemplateSummaryNotificationRuleAllOf {
	return &NullableTemplateSummaryNotificationRuleAllOf{value: val, isSet: true}
}

func (v NullableTemplateSummaryNotificationRuleAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateSummaryNotificationRuleAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
