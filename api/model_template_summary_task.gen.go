/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TemplateSummaryTask struct for TemplateSummaryTask
type TemplateSummaryTask struct {
	Kind              string                 `json:"kind" yaml:"kind"`
	TemplateMetaName  string                 `json:"templateMetaName" yaml:"templateMetaName"`
	EnvReferences     []TemplateEnvReference `json:"envReferences" yaml:"envReferences"`
	LabelAssociations []TemplateSummaryLabel `json:"labelAssociations" yaml:"labelAssociations"`
	Id                uint64                 `json:"id" yaml:"id"`
	Name              string                 `json:"name" yaml:"name"`
	Description       *string                `json:"description,omitempty" yaml:"description,omitempty"`
	Cron              *string                `json:"cron,omitempty" yaml:"cron,omitempty"`
	Every             *string                `json:"every,omitempty" yaml:"every,omitempty"`
	Offset            *string                `json:"offset,omitempty" yaml:"offset,omitempty"`
}

// NewTemplateSummaryTask instantiates a new TemplateSummaryTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateSummaryTask(kind string, templateMetaName string, envReferences []TemplateEnvReference, labelAssociations []TemplateSummaryLabel, id uint64, name string) *TemplateSummaryTask {
	this := TemplateSummaryTask{}
	this.Kind = kind
	this.TemplateMetaName = templateMetaName
	this.EnvReferences = envReferences
	this.LabelAssociations = labelAssociations
	this.Id = id
	this.Name = name
	return &this
}

// NewTemplateSummaryTaskWithDefaults instantiates a new TemplateSummaryTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateSummaryTaskWithDefaults() *TemplateSummaryTask {
	this := TemplateSummaryTask{}
	return &this
}

// GetKind returns the Kind field value
func (o *TemplateSummaryTask) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTask) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *TemplateSummaryTask) SetKind(v string) {
	o.Kind = v
}

// GetTemplateMetaName returns the TemplateMetaName field value
func (o *TemplateSummaryTask) GetTemplateMetaName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemplateMetaName
}

// GetTemplateMetaNameOk returns a tuple with the TemplateMetaName field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTask) GetTemplateMetaNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateMetaName, true
}

// SetTemplateMetaName sets field value
func (o *TemplateSummaryTask) SetTemplateMetaName(v string) {
	o.TemplateMetaName = v
}

// GetEnvReferences returns the EnvReferences field value
func (o *TemplateSummaryTask) GetEnvReferences() []TemplateEnvReference {
	if o == nil {
		var ret []TemplateEnvReference
		return ret
	}

	return o.EnvReferences
}

// GetEnvReferencesOk returns a tuple with the EnvReferences field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTask) GetEnvReferencesOk() (*[]TemplateEnvReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvReferences, true
}

// SetEnvReferences sets field value
func (o *TemplateSummaryTask) SetEnvReferences(v []TemplateEnvReference) {
	o.EnvReferences = v
}

// GetLabelAssociations returns the LabelAssociations field value
func (o *TemplateSummaryTask) GetLabelAssociations() []TemplateSummaryLabel {
	if o == nil {
		var ret []TemplateSummaryLabel
		return ret
	}

	return o.LabelAssociations
}

// GetLabelAssociationsOk returns a tuple with the LabelAssociations field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTask) GetLabelAssociationsOk() (*[]TemplateSummaryLabel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LabelAssociations, true
}

// SetLabelAssociations sets field value
func (o *TemplateSummaryTask) SetLabelAssociations(v []TemplateSummaryLabel) {
	o.LabelAssociations = v
}

// GetId returns the Id field value
func (o *TemplateSummaryTask) GetId() uint64 {
	if o == nil {
		var ret uint64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTask) GetIdOk() (*uint64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TemplateSummaryTask) SetId(v uint64) {
	o.Id = v
}

// GetName returns the Name field value
func (o *TemplateSummaryTask) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTask) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TemplateSummaryTask) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TemplateSummaryTask) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTask) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TemplateSummaryTask) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TemplateSummaryTask) SetDescription(v string) {
	o.Description = &v
}

// GetCron returns the Cron field value if set, zero value otherwise.
func (o *TemplateSummaryTask) GetCron() string {
	if o == nil || o.Cron == nil {
		var ret string
		return ret
	}
	return *o.Cron
}

// GetCronOk returns a tuple with the Cron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTask) GetCronOk() (*string, bool) {
	if o == nil || o.Cron == nil {
		return nil, false
	}
	return o.Cron, true
}

// HasCron returns a boolean if a field has been set.
func (o *TemplateSummaryTask) HasCron() bool {
	if o != nil && o.Cron != nil {
		return true
	}

	return false
}

// SetCron gets a reference to the given string and assigns it to the Cron field.
func (o *TemplateSummaryTask) SetCron(v string) {
	o.Cron = &v
}

// GetEvery returns the Every field value if set, zero value otherwise.
func (o *TemplateSummaryTask) GetEvery() string {
	if o == nil || o.Every == nil {
		var ret string
		return ret
	}
	return *o.Every
}

// GetEveryOk returns a tuple with the Every field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTask) GetEveryOk() (*string, bool) {
	if o == nil || o.Every == nil {
		return nil, false
	}
	return o.Every, true
}

// HasEvery returns a boolean if a field has been set.
func (o *TemplateSummaryTask) HasEvery() bool {
	if o != nil && o.Every != nil {
		return true
	}

	return false
}

// SetEvery gets a reference to the given string and assigns it to the Every field.
func (o *TemplateSummaryTask) SetEvery(v string) {
	o.Every = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *TemplateSummaryTask) GetOffset() string {
	if o == nil || o.Offset == nil {
		var ret string
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTask) GetOffsetOk() (*string, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *TemplateSummaryTask) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given string and assigns it to the Offset field.
func (o *TemplateSummaryTask) SetOffset(v string) {
	o.Offset = &v
}

func (o TemplateSummaryTask) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["templateMetaName"] = o.TemplateMetaName
	}
	if true {
		toSerialize["envReferences"] = o.EnvReferences
	}
	if true {
		toSerialize["labelAssociations"] = o.LabelAssociations
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Cron != nil {
		toSerialize["cron"] = o.Cron
	}
	if o.Every != nil {
		toSerialize["every"] = o.Every
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateSummaryTask struct {
	value *TemplateSummaryTask
	isSet bool
}

func (v NullableTemplateSummaryTask) Get() *TemplateSummaryTask {
	return v.value
}

func (v *NullableTemplateSummaryTask) Set(val *TemplateSummaryTask) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateSummaryTask) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateSummaryTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateSummaryTask(val *TemplateSummaryTask) *NullableTemplateSummaryTask {
	return &NullableTemplateSummaryTask{value: val, isSet: true}
}

func (v NullableTemplateSummaryTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateSummaryTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
