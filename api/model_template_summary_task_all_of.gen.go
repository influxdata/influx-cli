/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TemplateSummaryTaskAllOf struct for TemplateSummaryTaskAllOf
type TemplateSummaryTaskAllOf struct {
	Id          uint64  `json:"id" yaml:"id"`
	Name        string  `json:"name" yaml:"name"`
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	Cron        *string `json:"cron,omitempty" yaml:"cron,omitempty"`
	Every       *string `json:"every,omitempty" yaml:"every,omitempty"`
	Offset      *string `json:"offset,omitempty" yaml:"offset,omitempty"`
}

// NewTemplateSummaryTaskAllOf instantiates a new TemplateSummaryTaskAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateSummaryTaskAllOf(id uint64, name string) *TemplateSummaryTaskAllOf {
	this := TemplateSummaryTaskAllOf{}
	this.Id = id
	this.Name = name
	return &this
}

// NewTemplateSummaryTaskAllOfWithDefaults instantiates a new TemplateSummaryTaskAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateSummaryTaskAllOfWithDefaults() *TemplateSummaryTaskAllOf {
	this := TemplateSummaryTaskAllOf{}
	return &this
}

// GetId returns the Id field value
func (o *TemplateSummaryTaskAllOf) GetId() uint64 {
	if o == nil {
		var ret uint64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTaskAllOf) GetIdOk() (*uint64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TemplateSummaryTaskAllOf) SetId(v uint64) {
	o.Id = v
}

// GetName returns the Name field value
func (o *TemplateSummaryTaskAllOf) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTaskAllOf) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TemplateSummaryTaskAllOf) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TemplateSummaryTaskAllOf) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTaskAllOf) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TemplateSummaryTaskAllOf) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TemplateSummaryTaskAllOf) SetDescription(v string) {
	o.Description = &v
}

// GetCron returns the Cron field value if set, zero value otherwise.
func (o *TemplateSummaryTaskAllOf) GetCron() string {
	if o == nil || o.Cron == nil {
		var ret string
		return ret
	}
	return *o.Cron
}

// GetCronOk returns a tuple with the Cron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTaskAllOf) GetCronOk() (*string, bool) {
	if o == nil || o.Cron == nil {
		return nil, false
	}
	return o.Cron, true
}

// HasCron returns a boolean if a field has been set.
func (o *TemplateSummaryTaskAllOf) HasCron() bool {
	if o != nil && o.Cron != nil {
		return true
	}

	return false
}

// SetCron gets a reference to the given string and assigns it to the Cron field.
func (o *TemplateSummaryTaskAllOf) SetCron(v string) {
	o.Cron = &v
}

// GetEvery returns the Every field value if set, zero value otherwise.
func (o *TemplateSummaryTaskAllOf) GetEvery() string {
	if o == nil || o.Every == nil {
		var ret string
		return ret
	}
	return *o.Every
}

// GetEveryOk returns a tuple with the Every field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTaskAllOf) GetEveryOk() (*string, bool) {
	if o == nil || o.Every == nil {
		return nil, false
	}
	return o.Every, true
}

// HasEvery returns a boolean if a field has been set.
func (o *TemplateSummaryTaskAllOf) HasEvery() bool {
	if o != nil && o.Every != nil {
		return true
	}

	return false
}

// SetEvery gets a reference to the given string and assigns it to the Every field.
func (o *TemplateSummaryTaskAllOf) SetEvery(v string) {
	o.Every = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *TemplateSummaryTaskAllOf) GetOffset() string {
	if o == nil || o.Offset == nil {
		var ret string
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateSummaryTaskAllOf) GetOffsetOk() (*string, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *TemplateSummaryTaskAllOf) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given string and assigns it to the Offset field.
func (o *TemplateSummaryTaskAllOf) SetOffset(v string) {
	o.Offset = &v
}

func (o TemplateSummaryTaskAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Cron != nil {
		toSerialize["cron"] = o.Cron
	}
	if o.Every != nil {
		toSerialize["every"] = o.Every
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateSummaryTaskAllOf struct {
	value *TemplateSummaryTaskAllOf
	isSet bool
}

func (v NullableTemplateSummaryTaskAllOf) Get() *TemplateSummaryTaskAllOf {
	return v.value
}

func (v *NullableTemplateSummaryTaskAllOf) Set(val *TemplateSummaryTaskAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateSummaryTaskAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateSummaryTaskAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateSummaryTaskAllOf(val *TemplateSummaryTaskAllOf) *NullableTemplateSummaryTaskAllOf {
	return &NullableTemplateSummaryTaskAllOf{value: val, isSet: true}
}

func (v NullableTemplateSummaryTaskAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateSummaryTaskAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
