/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// TemplateSummaryVariableArgs struct for TemplateSummaryVariableArgs
type TemplateSummaryVariableArgs struct {
	Type                 string `json:"type"`
	AdditionalProperties map[string]interface{}
}

type _TemplateSummaryVariableArgs TemplateSummaryVariableArgs

// NewTemplateSummaryVariableArgs instantiates a new TemplateSummaryVariableArgs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateSummaryVariableArgs(type_ string) *TemplateSummaryVariableArgs {
	this := TemplateSummaryVariableArgs{}
	this.Type = type_
	return &this
}

// NewTemplateSummaryVariableArgsWithDefaults instantiates a new TemplateSummaryVariableArgs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateSummaryVariableArgsWithDefaults() *TemplateSummaryVariableArgs {
	this := TemplateSummaryVariableArgs{}
	return &this
}

// GetType returns the Type field value
func (o *TemplateSummaryVariableArgs) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TemplateSummaryVariableArgs) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TemplateSummaryVariableArgs) SetType(v string) {
	o.Type = v
}

func (o TemplateSummaryVariableArgs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *TemplateSummaryVariableArgs) UnmarshalJSON(bytes []byte) (err error) {
	varTemplateSummaryVariableArgs := _TemplateSummaryVariableArgs{}

	if err = json.Unmarshal(bytes, &varTemplateSummaryVariableArgs); err == nil {
		*o = TemplateSummaryVariableArgs(varTemplateSummaryVariableArgs)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTemplateSummaryVariableArgs struct {
	value *TemplateSummaryVariableArgs
	isSet bool
}

func (v NullableTemplateSummaryVariableArgs) Get() *TemplateSummaryVariableArgs {
	return v.value
}

func (v *NullableTemplateSummaryVariableArgs) Set(val *TemplateSummaryVariableArgs) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateSummaryVariableArgs) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateSummaryVariableArgs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateSummaryVariableArgs(val *TemplateSummaryVariableArgs) *NullableTemplateSummaryVariableArgs {
	return &NullableTemplateSummaryVariableArgs{value: val, isSet: true}
}

func (v NullableTemplateSummaryVariableArgs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateSummaryVariableArgs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
