// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

// Error defines model for Error.
type Error struct {

	// machine-readable error code.
	Code ErrorCode `json:"code"`

	// err is a stack of errors that occurred during processing of the request. Useful for debugging.
	Err *string `json:"err,omitempty"`

	// message is a human-readable message.
	Message string `json:"message"`

	// op describes the logical code operation during error. Useful for debugging.
	Op *string `json:"op,omitempty"`
}

// machine-readable error code.
type ErrorCode string

// List of ErrorCode
const (
	ErrorCode_conflict             ErrorCode = "conflict"
	ErrorCode_empty_value          ErrorCode = "empty value"
	ErrorCode_forbidden            ErrorCode = "forbidden"
	ErrorCode_internal_error       ErrorCode = "internal error"
	ErrorCode_invalid              ErrorCode = "invalid"
	ErrorCode_method_not_allowed   ErrorCode = "method not allowed"
	ErrorCode_not_found            ErrorCode = "not found"
	ErrorCode_request_too_large    ErrorCode = "request too large"
	ErrorCode_too_many_requests    ErrorCode = "too many requests"
	ErrorCode_unauthorized         ErrorCode = "unauthorized"
	ErrorCode_unavailable          ErrorCode = "unavailable"
	ErrorCode_unprocessable_entity ErrorCode = "unprocessable entity"
)

// HealthCheck defines model for HealthCheck.
type HealthCheck struct {
	Checks  *[]HealthCheck    `json:"checks,omitempty"`
	Commit  *string           `json:"commit,omitempty"`
	Message *string           `json:"message,omitempty"`
	Name    string            `json:"name"`
	Status  HealthCheckStatus `json:"status"`
	Version *string           `json:"version,omitempty"`
}

// HealthCheckStatus defines model for HealthCheckStatus.
type HealthCheckStatus string

// List of HealthCheckStatus
const (
	HealthCheckStatus_fail HealthCheckStatus = "fail"
	HealthCheckStatus_pass HealthCheckStatus = "pass"
)

// TraceSpan defines model for TraceSpan.
type TraceSpan string

// GetHealthParams defines parameters for GetHealth.
type GetHealthParams struct {

	// OpenTracing span context
	ZapTraceSpan *TraceSpan `json:"Zap-Trace-Span,omitempty"`
}
