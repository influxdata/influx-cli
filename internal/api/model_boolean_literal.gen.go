/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// BooleanLiteral Represents boolean values
type BooleanLiteral struct {
	// Type of AST node
	Type  *string `json:"type,omitempty"`
	Value *bool   `json:"value,omitempty"`
}

// NewBooleanLiteral instantiates a new BooleanLiteral object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBooleanLiteral() *BooleanLiteral {
	this := BooleanLiteral{}
	return &this
}

// NewBooleanLiteralWithDefaults instantiates a new BooleanLiteral object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBooleanLiteralWithDefaults() *BooleanLiteral {
	this := BooleanLiteral{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BooleanLiteral) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BooleanLiteral) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BooleanLiteral) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BooleanLiteral) SetType(v string) {
	o.Type = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *BooleanLiteral) GetValue() bool {
	if o == nil || o.Value == nil {
		var ret bool
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BooleanLiteral) GetValueOk() (*bool, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *BooleanLiteral) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given bool and assigns it to the Value field.
func (o *BooleanLiteral) SetValue(v bool) {
	o.Value = &v
}

func (o BooleanLiteral) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableBooleanLiteral struct {
	value *BooleanLiteral
	isSet bool
}

func (v NullableBooleanLiteral) Get() *BooleanLiteral {
	return v.value
}

func (v *NullableBooleanLiteral) Set(val *BooleanLiteral) {
	v.value = val
	v.isSet = true
}

func (v NullableBooleanLiteral) IsSet() bool {
	return v.isSet
}

func (v *NullableBooleanLiteral) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBooleanLiteral(val *BooleanLiteral) *NullableBooleanLiteral {
	return &NullableBooleanLiteral{value: val, isSet: true}
}

func (v NullableBooleanLiteral) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBooleanLiteral) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
