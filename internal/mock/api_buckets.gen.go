// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/influxdata/influx-cli/v2/api (interfaces: BucketsApi)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	api "github.com/influxdata/influx-cli/v2/api"
)

// MockBucketsApi is a mock of BucketsApi interface.
type MockBucketsApi struct {
	ctrl     *gomock.Controller
	recorder *MockBucketsApiMockRecorder
}

// MockBucketsApiMockRecorder is the mock recorder for MockBucketsApi.
type MockBucketsApiMockRecorder struct {
	mock *MockBucketsApi
}

// NewMockBucketsApi creates a new mock instance.
func NewMockBucketsApi(ctrl *gomock.Controller) *MockBucketsApi {
	mock := &MockBucketsApi{ctrl: ctrl}
	mock.recorder = &MockBucketsApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBucketsApi) EXPECT() *MockBucketsApiMockRecorder {
	return m.recorder
}

// DeleteBucketsID mocks base method.
func (m *MockBucketsApi) DeleteBucketsID(arg0 context.Context, arg1 string) api.ApiDeleteBucketsIDRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBucketsID", arg0, arg1)
	ret0, _ := ret[0].(api.ApiDeleteBucketsIDRequest)
	return ret0
}

// DeleteBucketsID indicates an expected call of DeleteBucketsID.
func (mr *MockBucketsApiMockRecorder) DeleteBucketsID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBucketsID", reflect.TypeOf((*MockBucketsApi)(nil).DeleteBucketsID), arg0, arg1)
}

// DeleteBucketsIDExecute mocks base method.
func (m *MockBucketsApi) DeleteBucketsIDExecute(arg0 api.ApiDeleteBucketsIDRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBucketsIDExecute", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteBucketsIDExecute indicates an expected call of DeleteBucketsIDExecute.
func (mr *MockBucketsApiMockRecorder) DeleteBucketsIDExecute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBucketsIDExecute", reflect.TypeOf((*MockBucketsApi)(nil).DeleteBucketsIDExecute), arg0)
}

// GetBuckets mocks base method.
func (m *MockBucketsApi) GetBuckets(arg0 context.Context) api.ApiGetBucketsRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBuckets", arg0)
	ret0, _ := ret[0].(api.ApiGetBucketsRequest)
	return ret0
}

// GetBuckets indicates an expected call of GetBuckets.
func (mr *MockBucketsApiMockRecorder) GetBuckets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBuckets", reflect.TypeOf((*MockBucketsApi)(nil).GetBuckets), arg0)
}

// GetBucketsExecute mocks base method.
func (m *MockBucketsApi) GetBucketsExecute(arg0 api.ApiGetBucketsRequest) (api.Buckets, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBucketsExecute", arg0)
	ret0, _ := ret[0].(api.Buckets)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBucketsExecute indicates an expected call of GetBucketsExecute.
func (mr *MockBucketsApiMockRecorder) GetBucketsExecute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBucketsExecute", reflect.TypeOf((*MockBucketsApi)(nil).GetBucketsExecute), arg0)
}

// GetBucketsID mocks base method.
func (m *MockBucketsApi) GetBucketsID(arg0 context.Context, arg1 string) api.ApiGetBucketsIDRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBucketsID", arg0, arg1)
	ret0, _ := ret[0].(api.ApiGetBucketsIDRequest)
	return ret0
}

// GetBucketsID indicates an expected call of GetBucketsID.
func (mr *MockBucketsApiMockRecorder) GetBucketsID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBucketsID", reflect.TypeOf((*MockBucketsApi)(nil).GetBucketsID), arg0, arg1)
}

// GetBucketsIDExecute mocks base method.
func (m *MockBucketsApi) GetBucketsIDExecute(arg0 api.ApiGetBucketsIDRequest) (api.Bucket, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBucketsIDExecute", arg0)
	ret0, _ := ret[0].(api.Bucket)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBucketsIDExecute indicates an expected call of GetBucketsIDExecute.
func (mr *MockBucketsApiMockRecorder) GetBucketsIDExecute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBucketsIDExecute", reflect.TypeOf((*MockBucketsApi)(nil).GetBucketsIDExecute), arg0)
}

// PatchBucketsID mocks base method.
func (m *MockBucketsApi) PatchBucketsID(arg0 context.Context, arg1 string) api.ApiPatchBucketsIDRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PatchBucketsID", arg0, arg1)
	ret0, _ := ret[0].(api.ApiPatchBucketsIDRequest)
	return ret0
}

// PatchBucketsID indicates an expected call of PatchBucketsID.
func (mr *MockBucketsApiMockRecorder) PatchBucketsID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PatchBucketsID", reflect.TypeOf((*MockBucketsApi)(nil).PatchBucketsID), arg0, arg1)
}

// PatchBucketsIDExecute mocks base method.
func (m *MockBucketsApi) PatchBucketsIDExecute(arg0 api.ApiPatchBucketsIDRequest) (api.Bucket, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PatchBucketsIDExecute", arg0)
	ret0, _ := ret[0].(api.Bucket)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PatchBucketsIDExecute indicates an expected call of PatchBucketsIDExecute.
func (mr *MockBucketsApiMockRecorder) PatchBucketsIDExecute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PatchBucketsIDExecute", reflect.TypeOf((*MockBucketsApi)(nil).PatchBucketsIDExecute), arg0)
}

// PostBuckets mocks base method.
func (m *MockBucketsApi) PostBuckets(arg0 context.Context) api.ApiPostBucketsRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostBuckets", arg0)
	ret0, _ := ret[0].(api.ApiPostBucketsRequest)
	return ret0
}

// PostBuckets indicates an expected call of PostBuckets.
func (mr *MockBucketsApiMockRecorder) PostBuckets(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostBuckets", reflect.TypeOf((*MockBucketsApi)(nil).PostBuckets), arg0)
}

// PostBucketsExecute mocks base method.
func (m *MockBucketsApi) PostBucketsExecute(arg0 api.ApiPostBucketsRequest) (api.Bucket, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostBucketsExecute", arg0)
	ret0, _ := ret[0].(api.Bucket)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PostBucketsExecute indicates an expected call of PostBucketsExecute.
func (mr *MockBucketsApiMockRecorder) PostBucketsExecute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostBucketsExecute", reflect.TypeOf((*MockBucketsApi)(nil).PostBucketsExecute), arg0)
}
