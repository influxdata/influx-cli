// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/influxdata/influx-cli/v2/internal/api (interfaces: HealthApi)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	api "github.com/influxdata/influx-cli/v2/internal/api"
)

// MockHealthApi is a mock of HealthApi interface.
type MockHealthApi struct {
	ctrl     *gomock.Controller
	recorder *MockHealthApiMockRecorder
}

// MockHealthApiMockRecorder is the mock recorder for MockHealthApi.
type MockHealthApiMockRecorder struct {
	mock *MockHealthApi
}

// NewMockHealthApi creates a new mock instance.
func NewMockHealthApi(ctrl *gomock.Controller) *MockHealthApi {
	mock := &MockHealthApi{ctrl: ctrl}
	mock.recorder = &MockHealthApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHealthApi) EXPECT() *MockHealthApiMockRecorder {
	return m.recorder
}

// GetHealth mocks base method.
func (m *MockHealthApi) GetHealth(arg0 context.Context) api.ApiGetHealthRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHealth", arg0)
	ret0, _ := ret[0].(api.ApiGetHealthRequest)
	return ret0
}

// GetHealth indicates an expected call of GetHealth.
func (mr *MockHealthApiMockRecorder) GetHealth(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHealth", reflect.TypeOf((*MockHealthApi)(nil).GetHealth), arg0)
}

// GetHealthExecute mocks base method.
func (m *MockHealthApi) GetHealthExecute(arg0 api.ApiGetHealthRequest) (api.HealthCheck, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHealthExecute", arg0)
	ret0, _ := ret[0].(api.HealthCheck)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHealthExecute indicates an expected call of GetHealthExecute.
func (mr *MockHealthApiMockRecorder) GetHealthExecute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHealthExecute", reflect.TypeOf((*MockHealthApi)(nil).GetHealthExecute), arg0)
}
