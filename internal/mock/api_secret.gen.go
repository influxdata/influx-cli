// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/influxdata/influx-cli/v2/api (interfaces: SecretsApi)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	api "github.com/influxdata/influx-cli/v2/api"
)

// MockSecretsApi is a mock of SecretsApi interface.
type MockSecretsApi struct {
	ctrl     *gomock.Controller
	recorder *MockSecretsApiMockRecorder
}

// MockSecretsApiMockRecorder is the mock recorder for MockSecretsApi.
type MockSecretsApiMockRecorder struct {
	mock *MockSecretsApi
}

// NewMockSecretsApi creates a new mock instance.
func NewMockSecretsApi(ctrl *gomock.Controller) *MockSecretsApi {
	mock := &MockSecretsApi{ctrl: ctrl}
	mock.recorder = &MockSecretsApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretsApi) EXPECT() *MockSecretsApiMockRecorder {
	return m.recorder
}

// GetOrgsIDSecrets mocks base method.
func (m *MockSecretsApi) GetOrgsIDSecrets(arg0 context.Context, arg1 string) api.ApiGetOrgsIDSecretsRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrgsIDSecrets", arg0, arg1)
	ret0, _ := ret[0].(api.ApiGetOrgsIDSecretsRequest)
	return ret0
}

// GetOrgsIDSecrets indicates an expected call of GetOrgsIDSecrets.
func (mr *MockSecretsApiMockRecorder) GetOrgsIDSecrets(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrgsIDSecrets", reflect.TypeOf((*MockSecretsApi)(nil).GetOrgsIDSecrets), arg0, arg1)
}

// GetOrgsIDSecretsExecute mocks base method.
func (m *MockSecretsApi) GetOrgsIDSecretsExecute(arg0 api.ApiGetOrgsIDSecretsRequest) (api.SecretKeysResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrgsIDSecretsExecute", arg0)
	ret0, _ := ret[0].(api.SecretKeysResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrgsIDSecretsExecute indicates an expected call of GetOrgsIDSecretsExecute.
func (mr *MockSecretsApiMockRecorder) GetOrgsIDSecretsExecute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrgsIDSecretsExecute", reflect.TypeOf((*MockSecretsApi)(nil).GetOrgsIDSecretsExecute), arg0)
}

// GetOrgsIDSecretsExecuteWithHttpInfo mocks base method.
func (m *MockSecretsApi) GetOrgsIDSecretsExecuteWithHttpInfo(arg0 api.ApiGetOrgsIDSecretsRequest) (api.SecretKeysResponse, *http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrgsIDSecretsExecuteWithHttpInfo", arg0)
	ret0, _ := ret[0].(api.SecretKeysResponse)
	ret1, _ := ret[1].(*http.Response)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetOrgsIDSecretsExecuteWithHttpInfo indicates an expected call of GetOrgsIDSecretsExecuteWithHttpInfo.
func (mr *MockSecretsApiMockRecorder) GetOrgsIDSecretsExecuteWithHttpInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrgsIDSecretsExecuteWithHttpInfo", reflect.TypeOf((*MockSecretsApi)(nil).GetOrgsIDSecretsExecuteWithHttpInfo), arg0)
}

// PatchOrgsIDSecrets mocks base method.
func (m *MockSecretsApi) PatchOrgsIDSecrets(arg0 context.Context, arg1 string) api.ApiPatchOrgsIDSecretsRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PatchOrgsIDSecrets", arg0, arg1)
	ret0, _ := ret[0].(api.ApiPatchOrgsIDSecretsRequest)
	return ret0
}

// PatchOrgsIDSecrets indicates an expected call of PatchOrgsIDSecrets.
func (mr *MockSecretsApiMockRecorder) PatchOrgsIDSecrets(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PatchOrgsIDSecrets", reflect.TypeOf((*MockSecretsApi)(nil).PatchOrgsIDSecrets), arg0, arg1)
}

// PatchOrgsIDSecretsExecute mocks base method.
func (m *MockSecretsApi) PatchOrgsIDSecretsExecute(arg0 api.ApiPatchOrgsIDSecretsRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PatchOrgsIDSecretsExecute", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// PatchOrgsIDSecretsExecute indicates an expected call of PatchOrgsIDSecretsExecute.
func (mr *MockSecretsApiMockRecorder) PatchOrgsIDSecretsExecute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PatchOrgsIDSecretsExecute", reflect.TypeOf((*MockSecretsApi)(nil).PatchOrgsIDSecretsExecute), arg0)
}

// PatchOrgsIDSecretsExecuteWithHttpInfo mocks base method.
func (m *MockSecretsApi) PatchOrgsIDSecretsExecuteWithHttpInfo(arg0 api.ApiPatchOrgsIDSecretsRequest) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PatchOrgsIDSecretsExecuteWithHttpInfo", arg0)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PatchOrgsIDSecretsExecuteWithHttpInfo indicates an expected call of PatchOrgsIDSecretsExecuteWithHttpInfo.
func (mr *MockSecretsApiMockRecorder) PatchOrgsIDSecretsExecuteWithHttpInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PatchOrgsIDSecretsExecuteWithHttpInfo", reflect.TypeOf((*MockSecretsApi)(nil).PatchOrgsIDSecretsExecuteWithHttpInfo), arg0)
}

// PostOrgsIDSecrets mocks base method.
func (m *MockSecretsApi) PostOrgsIDSecrets(arg0 context.Context, arg1 string) api.ApiPostOrgsIDSecretsRequest {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostOrgsIDSecrets", arg0, arg1)
	ret0, _ := ret[0].(api.ApiPostOrgsIDSecretsRequest)
	return ret0
}

// PostOrgsIDSecrets indicates an expected call of PostOrgsIDSecrets.
func (mr *MockSecretsApiMockRecorder) PostOrgsIDSecrets(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostOrgsIDSecrets", reflect.TypeOf((*MockSecretsApi)(nil).PostOrgsIDSecrets), arg0, arg1)
}

// PostOrgsIDSecretsExecute mocks base method.
func (m *MockSecretsApi) PostOrgsIDSecretsExecute(arg0 api.ApiPostOrgsIDSecretsRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostOrgsIDSecretsExecute", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// PostOrgsIDSecretsExecute indicates an expected call of PostOrgsIDSecretsExecute.
func (mr *MockSecretsApiMockRecorder) PostOrgsIDSecretsExecute(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostOrgsIDSecretsExecute", reflect.TypeOf((*MockSecretsApi)(nil).PostOrgsIDSecretsExecute), arg0)
}

// PostOrgsIDSecretsExecuteWithHttpInfo mocks base method.
func (m *MockSecretsApi) PostOrgsIDSecretsExecuteWithHttpInfo(arg0 api.ApiPostOrgsIDSecretsRequest) (*http.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostOrgsIDSecretsExecuteWithHttpInfo", arg0)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PostOrgsIDSecretsExecuteWithHttpInfo indicates an expected call of PostOrgsIDSecretsExecuteWithHttpInfo.
func (mr *MockSecretsApiMockRecorder) PostOrgsIDSecretsExecuteWithHttpInfo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostOrgsIDSecretsExecuteWithHttpInfo", reflect.TypeOf((*MockSecretsApi)(nil).PostOrgsIDSecretsExecuteWithHttpInfo), arg0)
}
